<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:esdl="http://www.tno.nl/esdl" xmlns:nl.tno.esdl.attribute.unit="http://www.tno.nl/esdl/attribute/unit" xmlns:nl.tno.esdl.version="http://www.tno.nl/esdl/version" xmlns:xsd="http://www.w3.org/2001/XMLSchema" ecore:nsPrefix="esdl" ecore:package="esdl" nl.tno.esdl.version:version="v2101" targetNamespace="http://www.tno.nl/esdl">
  <xsd:import namespace="http://www.eclipse.org/emf/2002/Ecore" schemaLocation="platform:/plugin/org.eclipse.emf.ecore/model/Ecore.xsd"/>
  <xsd:annotation>
    <xsd:documentation># Energy System Description Language

The Energy System Description Language (ESDL) is a modelling language created for modelling the components in an energy system and their relations towards each other. Furthermore ESDL is capable of expressing the dynamic behaviour of components in the energy system. For instance the power consumption of an neighbourhood. ESDL describes components by their basic functionality (so called Energy Capabilities), these are modelled in 5 abstract categories: Production, Consumption, Storage, Transport and Conversion. ESDL enables energy modelers to model a complex energy system in a generic way. The language is machine readable so makers of energy transition calculation tools and GIS applications can support ESDL in order to enforce the interoperability of their products.

ESDL is currently developed by [TNO](https://www.tno.nl), and is open source. 
The Github repository is at [https://github.com/EnergyTransition/ESDL](https://github.com/EnergyTransition/ESDL)

For more information about ESDL, see the [ESDL gitbook](https://energytransition.gitbook.io/esdl)
A browseable version of this model is found at [https://energytransition.github.io/](https://energytransition.github.io/)

ESDL version: v2101
Git commit hash $Id$</xsd:documentation>
  </xsd:annotation>
  <xsd:element ecore:ignore="true" name="EnergyAsset" type="esdl:EnergyAsset"/>
  <xsd:element ecore:ignore="true" name="Producer" type="esdl:Producer"/>
  <xsd:element ecore:ignore="true" name="Consumer" type="esdl:Consumer"/>
  <xsd:element ecore:ignore="true" name="Storage" type="esdl:Storage"/>
  <xsd:element ecore:ignore="true" name="Conversion" type="esdl:Conversion"/>
  <xsd:element ecore:ignore="true" name="Transport" type="esdl:Transport"/>
  <xsd:element ecore:ignore="true" name="EnergySystem" type="esdl:EnergySystem"/>
  <xsd:element ecore:ignore="true" name="WindTurbine" type="esdl:WindTurbine"/>
  <xsd:element ecore:ignore="true" name="PVPanel" type="esdl:PVPanel"/>
  <xsd:element ecore:ignore="true" name="Battery" type="esdl:Battery"/>
  <xsd:element ecore:ignore="true" name="ElectricityNetwork" type="esdl:ElectricityNetwork"/>
  <xsd:element ecore:ignore="true" name="ElectricityCable" type="esdl:ElectricityCable"/>
  <xsd:element ecore:ignore="true" name="AggregatedConsumer" type="esdl:AggregatedConsumer"/>
  <xsd:element ecore:ignore="true" name="BuildingUnit" type="esdl:BuildingUnit"/>
  <xsd:element ecore:ignore="true" name="Area" type="esdl:Area"/>
  <xsd:element ecore:ignore="true" name="Port" type="esdl:Port"/>
  <xsd:element ecore:ignore="true" name="AggregatedProducer" type="esdl:AggregatedProducer"/>
  <xsd:element ecore:ignore="true" name="InPort" type="esdl:InPort"/>
  <xsd:element ecore:ignore="true" name="OutPort" type="esdl:OutPort"/>
  <xsd:element ecore:ignore="true" name="Asset" type="esdl:Asset"/>
  <xsd:element ecore:ignore="true" name="GenericConsumer" type="esdl:GenericConsumer"/>
  <xsd:element ecore:ignore="true" name="GenericProducer" type="esdl:GenericProducer"/>
  <xsd:element ecore:ignore="true" name="GenericStorage" type="esdl:GenericStorage"/>
  <xsd:element ecore:ignore="true" name="GenericTransport" type="esdl:GenericTransport"/>
  <xsd:element ecore:ignore="true" name="GenericConversion" type="esdl:GenericConversion"/>
  <xsd:element ecore:ignore="true" name="AggregatedTransport" type="esdl:AggregatedTransport"/>
  <xsd:element ecore:ignore="true" name="AggregatedConversion" type="esdl:AggregatedConversion"/>
  <xsd:element ecore:ignore="true" name="AggregatedStorage" type="esdl:AggregatedStorage"/>
  <xsd:element ecore:ignore="true" name="GenericBuilding" type="esdl:GenericBuilding"/>
  <xsd:element ecore:ignore="true" name="HeatStorage" type="esdl:HeatStorage"/>
  <xsd:element ecore:ignore="true" name="GasHeater" type="esdl:GasHeater"/>
  <xsd:element ecore:ignore="true" name="HeatNetwork" type="esdl:HeatNetwork"/>
  <xsd:element ecore:ignore="true" name="GasNetwork" type="esdl:GasNetwork"/>
  <xsd:element ecore:ignore="true" name="Insulation" type="esdl:Insulation"/>
  <xsd:element ecore:ignore="true" name="Import" type="esdl:Import"/>
  <xsd:element ecore:ignore="true" name="Export" type="esdl:Export"/>
  <xsd:element ecore:ignore="true" name="Pipe" type="esdl:Pipe"/>
  <xsd:element ecore:ignore="true" name="GeothermalSource" type="esdl:GeothermalSource"/>
  <xsd:element ecore:ignore="true" name="CoGeneration" type="esdl:CoGeneration"/>
  <xsd:element ecore:ignore="true" name="HeatPump" type="esdl:HeatPump"/>
  <xsd:element ecore:ignore="true" name="HeatingDemand" type="esdl:HeatingDemand"/>
  <xsd:element ecore:ignore="true" name="ElectricityDemand" type="esdl:ElectricityDemand"/>
  <xsd:element ecore:ignore="true" name="GasDemand" type="esdl:GasDemand"/>
  <xsd:element ecore:ignore="true" name="GeothermalPotential" type="esdl:GeothermalPotential"/>
  <xsd:element ecore:ignore="true" name="Point" type="esdl:Point"/>
  <xsd:element ecore:ignore="true" name="Polygon" type="esdl:Polygon"/>
  <xsd:element ecore:ignore="true" name="EconomicProperties" type="esdl:EconomicProperties"/>
  <xsd:element ecore:ignore="true" name="SocialProperties" type="esdl:SocialProperties"/>
  <xsd:element ecore:ignore="true" name="LegalArea" type="esdl:LegalArea"/>
  <xsd:element ecore:ignore="true" name="EnergyService" type="esdl:EnergyService"/>
  <xsd:element ecore:ignore="true" name="DemandResponseService" type="esdl:DemandResponseService"/>
  <xsd:element ecore:ignore="true" name="Transformer" type="esdl:Transformer"/>
  <xsd:element ecore:ignore="true" name="HeatExchange" type="esdl:HeatExchange"/>
  <xsd:element ecore:ignore="true" name="Item" type="esdl:Item"/>
  <xsd:element ecore:ignore="true" name="Measures" type="esdl:Measures"/>
  <xsd:element ecore:ignore="true" name="EConnection" type="esdl:EConnection"/>
  <xsd:element ecore:ignore="true" name="HConnection" type="esdl:HConnection"/>
  <xsd:element ecore:ignore="true" name="GConnection" type="esdl:GConnection"/>
  <xsd:element ecore:ignore="true" name="PowerPlant" type="esdl:PowerPlant"/>
  <xsd:element ecore:ignore="true" name="AbstractBuilding" type="esdl:AbstractBuilding"/>
  <xsd:element ecore:ignore="true" name="Instance" type="esdl:Instance"/>
  <xsd:element ecore:ignore="true" name="Service" type="esdl:Service"/>
  <xsd:element ecore:ignore="true" name="AggregatorService" type="esdl:AggregatorService"/>
  <xsd:element ecore:ignore="true" name="EVChargingStation" type="esdl:EVChargingStation"/>
  <xsd:element ecore:ignore="true" name="Potential" type="esdl:Potential"/>
  <xsd:element ecore:ignore="true" name="WindPotential" type="esdl:WindPotential"/>
  <xsd:element ecore:ignore="true" name="AggregatedBuilding" type="esdl:AggregatedBuilding"/>
  <xsd:element ecore:ignore="true" name="EnergyCarrier" type="esdl:EnergyCarrier"/>
  <xsd:element ecore:ignore="true" name="Losses" type="esdl:Losses"/>
  <xsd:element ecore:ignore="true" name="PowerToX" type="esdl:PowerToX"/>
  <xsd:element ecore:ignore="true" name="CCS" type="esdl:CCS"/>
  <xsd:element ecore:ignore="true" name="Carriers" type="esdl:Carriers"/>
  <xsd:element ecore:ignore="true" name="FuelCell" type="esdl:FuelCell"/>
  <xsd:element ecore:ignore="true" name="XToPower" type="esdl:XToPower"/>
  <xsd:element ecore:ignore="true" name="EnergySystemInformation" type="esdl:EnergySystemInformation"/>
  <xsd:element ecore:ignore="true" name="Pump" type="esdl:Pump"/>
  <xsd:element ecore:ignore="true" name="Valve" type="esdl:Valve"/>
  <xsd:element ecore:ignore="true" name="GenericProfile" type="esdl:GenericProfile"/>
  <xsd:element ecore:ignore="true" name="StaticProfile" type="esdl:StaticProfile"/>
  <xsd:element ecore:ignore="true" name="DateTimeProfile" type="esdl:DateTimeProfile"/>
  <xsd:element ecore:ignore="true" name="ProfileElement" type="esdl:ProfileElement"/>
  <xsd:element ecore:ignore="true" name="ExternalProfile" type="esdl:ExternalProfile"/>
  <xsd:element ecore:ignore="true" name="SingleValue" type="esdl:SingleValue"/>
  <xsd:element ecore:ignore="true" name="GenericDistribution" type="esdl:GenericDistribution"/>
  <xsd:element ecore:ignore="true" name="Percentile" type="esdl:Percentile"/>
  <xsd:element ecore:ignore="true" name="PercentileDistribution" type="esdl:PercentileDistribution"/>
  <xsd:element ecore:ignore="true" name="CoolingDemand" type="esdl:CoolingDemand"/>
  <xsd:element ecore:ignore="true" name="Airco" type="esdl:Airco"/>
  <xsd:element ecore:ignore="true" name="CostInformation" type="esdl:CostInformation"/>
  <xsd:element ecore:ignore="true" name="SpecificLabelDistribution" type="esdl:SpecificLabelDistribution"/>
  <xsd:element ecore:ignore="true" name="StringLabelDistribution" type="esdl:StringLabelDistribution"/>
  <xsd:element ecore:ignore="true" name="EnergyLabelDistribution" type="esdl:EnergyLabelDistribution"/>
  <xsd:element ecore:ignore="true" name="StringItem" type="esdl:StringItem"/>
  <xsd:element ecore:ignore="true" name="EnergyLabelPerc" type="esdl:EnergyLabelPerc"/>
  <xsd:element ecore:ignore="true" name="FromToDistribution" type="esdl:FromToDistribution"/>
  <xsd:element ecore:ignore="true" name="FromToItem" type="esdl:FromToItem"/>
  <xsd:element ecore:ignore="true" name="PItemStat" type="esdl:PItemStat"/>
  <xsd:element ecore:ignore="true" name="AbstractVariance" type="esdl:AbstractVariance"/>
  <xsd:element ecore:ignore="true" name="SymmetricVariance" type="esdl:SymmetricVariance"/>
  <xsd:element ecore:ignore="true" name="AssymmetricVariance" type="esdl:AssymmetricVariance"/>
  <xsd:element ecore:ignore="true" name="DoubleAssymmetricVariance" type="esdl:DoubleAssymmetricVariance"/>
  <xsd:element ecore:ignore="true" name="CHP" type="esdl:CHP"/>
  <xsd:element ecore:ignore="true" name="Party" type="esdl:Party"/>
  <xsd:element ecore:ignore="true" name="URIProfile" type="esdl:URIProfile"/>
  <xsd:element ecore:ignore="true" name="DatabaseProfile" type="esdl:DatabaseProfile"/>
  <xsd:element ecore:ignore="true" name="InfluxDBProfile" type="esdl:InfluxDBProfile"/>
  <xsd:element ecore:ignore="true" name="Line" type="esdl:Line"/>
  <xsd:element ecore:ignore="true" name="Geometry" type="esdl:Geometry"/>
  <xsd:element ecore:ignore="true" name="Commodity" type="esdl:Commodity"/>
  <xsd:element ecore:ignore="true" name="GasCommodity" type="esdl:GasCommodity"/>
  <xsd:element ecore:ignore="true" name="HeatCommodity" type="esdl:HeatCommodity"/>
  <xsd:element ecore:ignore="true" name="ElectricityCommodity" type="esdl:ElectricityCommodity"/>
  <xsd:element ecore:ignore="true" name="Carrier" type="esdl:Carrier"/>
  <xsd:element ecore:ignore="true" name="Range" type="esdl:Range"/>
  <xsd:element ecore:ignore="true" name="SolarPotential" type="esdl:SolarPotential"/>
  <xsd:element ecore:ignore="true" name="Duration" type="esdl:Duration"/>
  <xsd:element ecore:ignore="true" name="ProfileReference" type="esdl:ProfileReference"/>
  <xsd:element ecore:ignore="true" name="Profiles" type="esdl:Profiles"/>
  <xsd:element ecore:ignore="true" name="Parties" type="esdl:Parties"/>
  <xsd:element ecore:ignore="true" name="DataSources" type="esdl:DataSources"/>
  <xsd:element ecore:ignore="true" name="DataSource" type="esdl:DataSource"/>
  <xsd:element ecore:ignore="true" name="EnergyDemand" type="esdl:EnergyDemand"/>
  <xsd:element ecore:ignore="true" name="SolarCollector" type="esdl:SolarCollector"/>
  <xsd:element ecore:ignore="true" name="ResidualHeatSource" type="esdl:ResidualHeatSource"/>
  <xsd:element ecore:ignore="true" name="FermentationPlant" type="esdl:FermentationPlant"/>
  <xsd:element ecore:ignore="true" name="ResidualHeatSourcePotential" type="esdl:ResidualHeatSourcePotential"/>
  <xsd:element ecore:ignore="true" name="SubPolygon" type="esdl:SubPolygon"/>
  <xsd:element ecore:ignore="true" name="MultiPolygon" type="esdl:MultiPolygon"/>
  <xsd:element ecore:ignore="true" name="EnergyCommodity" type="esdl:EnergyCommodity"/>
  <xsd:element ecore:ignore="true" name="MobilityDemand" type="esdl:MobilityDemand"/>
  <xsd:element ecore:ignore="true" name="MobilityFuelInformation" type="esdl:MobilityFuelInformation"/>
  <xsd:element ecore:ignore="true" name="VehicleFuelEfficiency" type="esdl:VehicleFuelEfficiency"/>
  <xsd:element ecore:ignore="true" name="MobilityProperties" type="esdl:MobilityProperties"/>
  <xsd:element ecore:ignore="true" name="NumberOfVehicles" type="esdl:NumberOfVehicles"/>
  <xsd:element ecore:ignore="true" name="VehicleCount" type="esdl:VehicleCount"/>
  <xsd:element ecore:ignore="true" name="Electrolyzer" type="esdl:Electrolyzer"/>
  <xsd:element ecore:ignore="true" name="GasStorage" type="esdl:GasStorage"/>
  <xsd:element ecore:ignore="true" name="Services" type="esdl:Services"/>
  <xsd:element ecore:ignore="true" name="ControlStrategy" type="esdl:ControlStrategy"/>
  <xsd:element ecore:ignore="true" name="DrivenByDemand" type="esdl:DrivenByDemand"/>
  <xsd:element ecore:ignore="true" name="QuantityAndUnitType" type="esdl:QuantityAndUnitType"/>
  <xsd:element ecore:ignore="true" name="AbstractDataSource" type="esdl:AbstractDataSource"/>
  <xsd:element ecore:ignore="true" name="DataSourceReference" type="esdl:DataSourceReference"/>
  <xsd:element ecore:ignore="true" name="KPIs" type="esdl:KPIs"/>
  <xsd:element ecore:ignore="true" name="KPI" type="esdl:KPI"/>
  <xsd:element ecore:ignore="true" name="QuantityAndUnits" type="esdl:QuantityAndUnits"/>
  <xsd:element ecore:ignore="true" name="AbstractQuantityAndUnit" type="esdl:AbstractQuantityAndUnit"/>
  <xsd:element ecore:ignore="true" name="QuantityAndUnitReference" type="esdl:QuantityAndUnitReference"/>
  <xsd:element ecore:ignore="true" name="EnergyMarket" type="esdl:EnergyMarket"/>
  <xsd:element ecore:ignore="true" name="GasConversion" type="esdl:GasConversion"/>
  <xsd:element ecore:ignore="true" name="Parameters" type="esdl:Parameters"/>
  <xsd:element ecore:ignore="true" name="StringParameter" type="esdl:StringParameter"/>
  <xsd:element ecore:ignore="true" name="DoubleParameter" type="esdl:DoubleParameter"/>
  <xsd:element ecore:ignore="true" name="IntegerParameter" type="esdl:IntegerParameter"/>
  <xsd:element ecore:ignore="true" name="BooleanParameter" type="esdl:BooleanParameter"/>
  <xsd:element ecore:ignore="true" name="DrivenBySupply" type="esdl:DrivenBySupply"/>
  <xsd:element ecore:ignore="true" name="DrivenByProfile" type="esdl:DrivenByProfile"/>
  <xsd:element ecore:ignore="true" name="PVInstallation" type="esdl:PVInstallation"/>
  <xsd:element ecore:ignore="true" name="CircuitBreaker" type="esdl:CircuitBreaker"/>
  <xsd:element ecore:ignore="true" name="Measure" type="esdl:Measure"/>
  <xsd:element ecore:ignore="true" name="WaterToPower" type="esdl:WaterToPower"/>
  <xsd:element ecore:ignore="true" name="Sectors" type="esdl:Sectors"/>
  <xsd:element ecore:ignore="true" name="Sector" type="esdl:Sector"/>
  <xsd:element ecore:ignore="true" name="EnergyNetwork" type="esdl:EnergyNetwork"/>
  <xsd:element ecore:ignore="true" name="AbstractConductor" type="esdl:AbstractConductor"/>
  <xsd:element ecore:ignore="true" name="AbstractSwitch" type="esdl:AbstractSwitch"/>
  <xsd:element ecore:ignore="true" name="AbstractTransformer" type="esdl:AbstractTransformer"/>
  <xsd:element ecore:ignore="true" name="AbstractConnection" type="esdl:AbstractConnection"/>
  <xsd:element ecore:ignore="true" name="MultiLine" type="esdl:MultiLine"/>
  <xsd:element ecore:ignore="true" name="GeothermalEnergyPotential" type="esdl:GeothermalEnergyPotential"/>
  <xsd:element ecore:ignore="true" name="AbstractGTPotential" type="esdl:AbstractGTPotential"/>
  <xsd:element ecore:ignore="true" name="UTESPotential" type="esdl:UTESPotential"/>
  <xsd:element ecore:ignore="true" name="AbstractInstanceDate" type="esdl:AbstractInstanceDate"/>
  <xsd:element ecore:ignore="true" name="InstanceDate" type="esdl:InstanceDate"/>
  <xsd:element ecore:ignore="true" name="InstancePeriod" type="esdl:InstancePeriod"/>
  <xsd:element ecore:ignore="true" name="RoomHeater" type="esdl:RoomHeater"/>
  <xsd:element ecore:ignore="true" name="BiomassPotential" type="esdl:BiomassPotential"/>
  <xsd:element ecore:ignore="true" name="BiomassHeater" type="esdl:BiomassHeater"/>
  <xsd:element ecore:ignore="true" name="UTES" type="esdl:UTES"/>
  <xsd:element ecore:ignore="true" name="WaterBuffer" type="esdl:WaterBuffer"/>
  <xsd:element ecore:ignore="true" name="Glazing" type="esdl:Glazing"/>
  <xsd:element ecore:ignore="true" name="WKT" type="esdl:WKT"/>
  <xsd:element ecore:ignore="true" name="WKB" type="esdl:WKB"/>
  <xsd:element ecore:ignore="true" name="SearchAreaWind" type="esdl:SearchAreaWind"/>
  <xsd:element ecore:ignore="true" name="SearchAreaSolar" type="esdl:SearchAreaSolar"/>
  <xsd:element ecore:ignore="true" name="Joint" type="esdl:Joint"/>
  <xsd:element ecore:ignore="true" name="StorageStrategy" type="esdl:StorageStrategy"/>
  <xsd:element ecore:ignore="true" name="CurtailmentStrategy" type="esdl:CurtailmentStrategy"/>
  <xsd:element ecore:ignore="true" name="PVTInstallation" type="esdl:PVTInstallation"/>
  <xsd:element ecore:ignore="true" name="BuildingUsage" type="esdl:BuildingUsage"/>
  <xsd:element ecore:ignore="true" name="WeekSchedule" type="esdl:WeekSchedule"/>
  <xsd:element ecore:ignore="true" name="DaySchedule" type="esdl:DaySchedule"/>
  <xsd:element ecore:ignore="true" name="Event" type="esdl:Event"/>
  <xsd:element ecore:ignore="true" name="AbstractBuildingUsage" type="esdl:AbstractBuildingUsage"/>
  <xsd:element ecore:ignore="true" name="BuildingUsageReference" type="esdl:BuildingUsageReference"/>
  <xsd:element ecore:ignore="true" name="BuildingUsageInformation" type="esdl:BuildingUsageInformation"/>
  <xsd:element ecore:ignore="true" name="BuildingTypeDistribution" type="esdl:BuildingTypeDistribution"/>
  <xsd:element ecore:ignore="true" name="BuildingTypePercentage" type="esdl:BuildingTypePercentage"/>
  <xsd:element ecore:ignore="true" name="ResidentialBuildingTypeDistribution" type="esdl:ResidentialBuildingTypeDistribution"/>
  <xsd:element ecore:ignore="true" name="ResidentialBuildingTypePercentage" type="esdl:ResidentialBuildingTypePercentage"/>
  <xsd:element ecore:ignore="true" name="OwnershipRentalTypeDistribution" type="esdl:OwnershipRentalTypeDistribution"/>
  <xsd:element ecore:ignore="true" name="OwnershipRentalTypePercentage" type="esdl:OwnershipRentalTypePercentage"/>
  <xsd:element ecore:ignore="true" name="DoubleKPI" type="esdl:DoubleKPI"/>
  <xsd:element ecore:ignore="true" name="StringKPI" type="esdl:StringKPI"/>
  <xsd:element ecore:ignore="true" name="IntKPI" type="esdl:IntKPI"/>
  <xsd:element ecore:ignore="true" name="FromToIntItem" type="esdl:FromToIntItem"/>
  <xsd:element ecore:ignore="true" name="FromToDoubleItem" type="esdl:FromToDoubleItem"/>
  <xsd:element ecore:ignore="true" name="Matter" type="esdl:Matter"/>
  <xsd:element ecore:ignore="true" name="Bus" type="esdl:Bus"/>
  <xsd:element ecore:ignore="true" name="AbstractSensor" type="esdl:AbstractSensor"/>
  <xsd:element ecore:ignore="true" name="Sensor" type="esdl:Sensor"/>
  <xsd:element ecore:ignore="true" name="Switch" type="esdl:Switch"/>
  <xsd:element ecore:ignore="true" name="Compressor" type="esdl:Compressor"/>
  <xsd:element ecore:ignore="true" name="PressureReducingValve" type="esdl:PressureReducingValve"/>
  <xsd:element ecore:ignore="true" name="CompoundMatter" type="esdl:CompoundMatter"/>
  <xsd:element ecore:ignore="true" name="CompoundMatterComponent" type="esdl:CompoundMatterComponent"/>
  <xsd:element ecore:ignore="true" name="PIDController" type="esdl:PIDController"/>
  <xsd:element ecore:ignore="true" name="PVPark" type="esdl:PVPark"/>
  <xsd:element ecore:ignore="true" name="WindPark" type="esdl:WindPark"/>
  <xsd:element ecore:ignore="true" name="IntTargetKPI" type="esdl:IntTargetKPI"/>
  <xsd:element ecore:ignore="true" name="DoubleTargetKPI" type="esdl:DoubleTargetKPI"/>
  <xsd:element ecore:ignore="true" name="StringTargetKPI" type="esdl:StringTargetKPI"/>
  <xsd:element ecore:ignore="true" name="Restriction" type="esdl:Restriction"/>
  <xsd:element ecore:ignore="true" name="BuildingTypeRestriction" type="esdl:BuildingTypeRestriction"/>
  <xsd:element ecore:ignore="true" name="AreaTypeRestriction" type="esdl:AreaTypeRestriction"/>
  <xsd:element ecore:ignore="true" name="Templates" type="esdl:Templates"/>
  <xsd:element ecore:ignore="true" name="AssetTemplate" type="esdl:AssetTemplate"/>
  <xsd:element ecore:ignore="true" name="TemplatedAsset" type="esdl:TemplatedAsset"/>
  <xsd:element ecore:ignore="true" name="Address" type="esdl:Address"/>
  <xsd:element ecore:ignore="true" name="GenericLabelDistribution" type="esdl:GenericLabelDistribution"/>
  <xsd:element ecore:ignore="true" name="DistributionKPI" type="esdl:DistributionKPI"/>
  <xsd:element ecore:ignore="true" name="SinkConsumer" type="esdl:SinkConsumer"/>
  <xsd:element ecore:ignore="true" name="SourceProducer" type="esdl:SourceProducer"/>
  <xsd:element ecore:ignore="true" name="MinimumLabelRestriction" type="esdl:MinimumLabelRestriction"/>
  <xsd:element ecore:ignore="true" name="LabelJump" type="esdl:LabelJump"/>
  <xsd:element ecore:ignore="true" name="AbstractMeasure" type="esdl:AbstractMeasure"/>
  <xsd:element ecore:ignore="true" name="MeasureReference" type="esdl:MeasureReference"/>
  <xsd:element ecore:ignore="true" name="Building" type="esdl:Building"/>
  <xsd:element ecore:ignore="true" name="BuildingInformation" type="esdl:BuildingInformation"/>
  <xsd:element ecore:ignore="true" name="ResidentialBuildingInformation" type="esdl:ResidentialBuildingInformation"/>
  <xsd:element ecore:ignore="true" name="BuildingStructureInformation" type="esdl:BuildingStructureInformation"/>
  <xsd:element ecore:ignore="true" name="CompoundAsset" type="esdl:CompoundAsset"/>
  <xsd:element ecore:ignore="true" name="InitialValue" type="esdl:InitialValue"/>
  <xsd:element ecore:ignore="true" name="Table" type="esdl:Table"/>
  <xsd:element ecore:ignore="true" name="TableRow" type="esdl:TableRow"/>
  <xsd:element ecore:ignore="true" name="AbstractActiveSwitch" type="esdl:AbstractActiveSwitch"/>
  <xsd:element ecore:ignore="true" name="AbstractPassiveSwitch" type="esdl:AbstractPassiveSwitch"/>
  <xsd:element ecore:ignore="true" name="CheckValve" type="esdl:CheckValve"/>
  <xsd:element ecore:ignore="true" name="AirVessel" type="esdl:AirVessel"/>
  <xsd:element ecore:ignore="true" name="Notes" type="esdl:Notes"/>
  <xsd:element ecore:ignore="true" name="Note" type="esdl:Note"/>
  <xsd:element ecore:ignore="true" name="Fuel" type="esdl:Fuel"/>
  <xsd:element ecore:ignore="true" name="Material" type="esdl:Material"/>
  <xsd:element ecore:ignore="true" name="Matters" type="esdl:Matters"/>
  <xsd:element ecore:ignore="true" name="AbstractMatter" type="esdl:AbstractMatter"/>
  <xsd:element ecore:ignore="true" name="MatterReference" type="esdl:MatterReference"/>
  <xsd:element ecore:ignore="true" name="EnvironmentalProfiles" type="esdl:EnvironmentalProfiles"/>
  <xsd:element ecore:ignore="true" name="AbstractBehaviour" type="esdl:AbstractBehaviour"/>
  <xsd:element ecore:ignore="true" name="GenericTransferFunction" type="esdl:GenericTransferFunction"/>
  <xsd:element ecore:ignore="true" name="InputOutputQuantityRelation" type="esdl:InputOutputQuantityRelation"/>
  <xsd:element ecore:ignore="true" name="DelayTransferFunction" type="esdl:DelayTransferFunction"/>
  <xsd:element ecore:ignore="true" name="AbstractTransferFunction" type="esdl:AbstractTransferFunction"/>
  <xsd:element ecore:ignore="true" name="CombinedTransferFunction" type="esdl:CombinedTransferFunction"/>
  <xsd:element ecore:ignore="true" name="ElectricityProducer" type="esdl:ElectricityProducer"/>
  <xsd:element ecore:ignore="true" name="HeatProducer" type="esdl:HeatProducer"/>
  <xsd:element ecore:ignore="true" name="GasProducer" type="esdl:GasProducer"/>
  <xsd:complexType abstract="true" name="EnergyAsset">
    <xsd:annotation>
      <xsd:documentation>An abstract class that describes a connectable Asset using ports. EnergyAssets main subclasses contain the 5 capability type: Producer, Consumer, Storage, Conversion and Transport </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Asset">
        <xsd:sequence>
          <xsd:element ecore:opposite="energyasset" ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="port" type="esdl:Port"/>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="behaviour" type="esdl:AbstractBehaviour">
            <xsd:annotation>
              <xsd:documentation>parameter that allows to specify the (dynamic) behaviour of this asset</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute ecore:opposite="energyAsset" ecore:reference="esdl:ControlStrategy" name="controlStrategy" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="Producer">
    <xsd:annotation>
      <xsd:documentation>An abstract class that describes EnergyAssets that can produce energy. It is one of the 5 capabilities in ESDL</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:EnergyAsset">
        <xsd:attribute default="RENEWABLE" ecore:unsettable="false" name="prodType" type="esdl:RenewableTypeEnum"/>
        <xsd:attribute ecore:unsettable="false" name="operationalHours" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>Defines the amount of time it is operational in hours during the year (e.g. the producer is not in maintenance and not actively turned off)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="fullLoadHours" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>An annual number of full-load hours is the time it will take a given Producer to yield its annual production if it is able to produce with its installed capacity all of the time. The capacity is defined by the 'power' attribute</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="power" nl.tno.esdl.attribute.unit:unit="W" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Maximum (output) power in Watt. This attribute specifies the rated output power of the producer.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="Consumer">
    <xsd:annotation>
      <xsd:documentation>An abstract class that describes EnergyAssets that can consume energy. It is one of the 5 capabilities in ESDL</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:EnergyAsset">
        <xsd:attribute default="PRIMARY" ecore:unsettable="false" name="consType" type="esdl:ConsTypeEnum"/>
        <xsd:attribute ecore:unsettable="false" name="power" nl.tno.esdl.attribute.unit:unit="W" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Maximum power / capacity in Watt</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="Storage">
    <xsd:annotation>
      <xsd:documentation>An abstract class that describes EnergyAssets that can store energy. It is one of the 5 capabilities in ESDL</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:EnergyAsset">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="profile" type="esdl:GenericProfile"/>
        </xsd:sequence>
        <xsd:attribute ecore:unsettable="false" name="capacity" nl.tno.esdl.attribute.unit:unit="J" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The capacity of the storage asset in Joules	</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="chargeEfficiency" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The efficiency with which the storage asset can be charged (in %)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="dischargeEfficiency" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The efficiency with which the storage asset can be discharged (in %)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="selfDischargeRate" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The self discharge rate with which the storage asset looses energy (in J/s)
</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="fillLevel" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The fill level of the storage asset as a percentage of its capacity</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="maxChargeRate" nl.tno.esdl.attribute.unit:unit="W" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The maximum charge rate at which the storage asset can be charged (in Watt)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="maxDischargeRate" nl.tno.esdl.attribute.unit:unit="W" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The maximum discharge rate at which the storage asset can be discharged (in Watt)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="Conversion">
    <xsd:annotation>
      <xsd:documentation>An abstract class that describes EnergyAssets that can convert one energy carrier into another. It is one of the 5 capabilities in ESDL</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:EnergyAsset">
        <xsd:attribute ecore:unsettable="false" name="efficiency" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The efficiency of the conversion asset. Allows to specify conversion losses as a percentage</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="operationalHours" type="ecore:EInt"/>
        <xsd:attribute ecore:unsettable="false" name="fullLoadHours" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>An annual number of full-load hours is the time it will take a given conversion asset to yield its annual production if it is able to produce with its installed capacity all of the time. The capacity is defined by the 'power' attribute</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="power" nl.tno.esdl.attribute.unit:unit="W" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Maximum power / capacity in Watt</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:opposite="associatedConversionAsset" ecore:reference="esdl:ResidualHeatSourcePotential" name="residualHeatSourcePotential" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="Transport">
    <xsd:annotation>
      <xsd:documentation>An abstract class that describes EnergyAssets that can transport energy. It is one of the 5 capabilities in ESDL</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:EnergyAsset">
        <xsd:attribute ecore:unsettable="false" name="capacity" nl.tno.esdl.attribute.unit:unit="J" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The capacity of the transport asset in Joules	</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="efficiency" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The efficiency of the transport asset. Allows to specify transmission losses as a percentage</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="CommodityEnum">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="ELECTRICITY"/>
      <xsd:enumeration value="GAS"/>
      <xsd:enumeration value="HEAT"/>
      <xsd:enumeration value="H2"/>
      <xsd:enumeration value="BIOGAS"/>
      <xsd:enumeration value="CO2"/>
      <xsd:enumeration value="ENERGY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="EnergySystem">
    <xsd:annotation>
      <xsd:documentation>This is the main class to describe an EnergySystem in ESDL. Each energy system description should start with this class. More information about ESDL and the Energy System can be found in the gitbook at https://energytransition.gitbook.io/esdl/</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:unique="true" maxOccurs="unbounded" minOccurs="0" name="sector" type="esdl:SectorEnum">
        <xsd:annotation>
          <xsd:documentation>(experimental) A selection of sectors that is relevant for this energy system </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="measures" type="esdl:Measures">
        <xsd:annotation>
          <xsd:documentation>The collection of measures that can be applied in this energy system by models and tools</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="instance" type="esdl:Instance">
        <xsd:annotation>
          <xsd:documentation> Instances are used to represent different representations of the same EnergySystem. Most of the times only one Instance will be used. The primary use case for having more than one Instance is when you have different aggregations of the same EnergySystem in the same model (e.g. the same region on house level and aggregated on neighbourhood level). Another option would be to create different instances for different years (to describe the progress of the energy transition).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="energySystemInformation" type="esdl:EnergySystemInformation">
        <xsd:annotation>
          <xsd:documentation>The EnergySystemInformation class is a container for additional information about the EnergySystem in general, such as profiles, energy carriers, data sources, etc. You can refer to these in other parts of the energy system description.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="parties" type="esdl:Parties">
        <xsd:annotation>
          <xsd:documentation>Parties involved in the EnergySystem, e.g. to model ownership of assets or areas.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="services" type="esdl:Services">
        <xsd:annotation>
          <xsd:documentation>(experimental) Abstract information like services (demand response, aggregator services), energy markets and control strategies.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="templates" type="esdl:Templates">
        <xsd:annotation>
          <xsd:documentation>Collection of generic templates that can be used to derive specific instances from.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="name" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Name of the energy system</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="description" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>A description of the energy system</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="geographicalScope" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Geographical scope of the energy system as a text. In the area itself you can define the scope in more detail</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>A unique identifier for this energy system</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="version" type="ecore:EString"/>
    <xsd:attribute default="" ecore:unsettable="false" name="esdlVersion" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>ESDL version used to create this Energy System, e.g. v2101 for the January 2021 release.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="WindTurbine">
    <xsd:annotation>
      <xsd:documentation>Describes an individual wind turbine. A wind turbine is a producer capability</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:ElectricityProducer">
        <xsd:attribute ecore:unsettable="false" name="rotorDiameter" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="height" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="type" type="esdl:WindTurbineTypeEnum"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="PVPanel">
    <xsd:annotation>
      <xsd:documentation>Describes an individual PV panel. See PVInstallation for multiple PV panels. This is a Producer capability</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:ElectricityProducer">
        <xsd:attribute ecore:unsettable="false" name="panelEfficiency" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="inverterEfficiency" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="angle" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>The tilt angle of the PV installation in degrees (e.g. 0 is flat, 90 is perpendicular to a horizontal surface).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="orientation" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>The orientation of the PV installation (south, north, west, east) in degrees.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Battery">
    <xsd:annotation>
      <xsd:documentation>A battery can store electrical energy. This is a Storage capability</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Storage">
        <xsd:attribute ecore:unsettable="false" name="maxChargeDischargeCycles" type="ecore:EInt"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ElectricityNetwork">
    <xsd:annotation>
      <xsd:documentation>Describes an complete Electricty network, without detailing the complete topology. It is a Transport capability</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:EnergyNetwork">
        <xsd:attribute ecore:unsettable="false" name="voltage" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ElectricityCable">
    <xsd:annotation>
      <xsd:documentation>Describes a representation of an electricity cable. When defining the geometry of a cable by means of a line, the first point of the line refers to the first port and the last point of the line refers to the second port.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractConductor">
        <xsd:attribute ecore:unsettable="false" name="length" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Length of the cable in meters</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AggregatedConsumer">
    <xsd:annotation>
      <xsd:documentation>Represents an aggregation of multiple consumers as one aggregated consumer. It allows you to reference the consumers it is aggregated of by using the aggregationOf reference. Can be used to aggregate a heterogeneous collection of consumers (e.g. of different types)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Consumer">
        <xsd:attribute ecore:reference="esdl:Consumer" name="aggregationOf">
          <xsd:simpleType>
            <xsd:list itemType="xsd:anyURI"/>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BuildingUnit">
    <xsd:annotation>
      <xsd:documentation>Describes a physical part of a building. In dutch 'verblijfsobject' in the BAG national building and address registry. This can be used e.g. to model appartments in appartment complexes</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:GenericBuilding"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Area">
    <xsd:annotation>
      <xsd:documentation>The Area class represents a physical geographic area or a more abstract logical area. In both cases it is the 'asset container', in a sense that all assets within the area are contained by the Area instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="socialProperties" type="esdl:SocialProperties">
        <xsd:annotation>
          <xsd:documentation>(experimental) Used to model social aspects of the area, such as population density, number of inhabitants, etc.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="economicProperties" type="esdl:EconomicProperties">
        <xsd:annotation>
          <xsd:documentation>(experimental) Used to model economic properties of this area, such as income, WOZ-value, etc.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:opposite="area" ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="asset" type="esdl:Asset">
        <xsd:annotation>
          <xsd:documentation>contains all the assets in this area, both Buildings and EnergyAssets</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:opposite="containingArea" ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="area" type="esdl:Area">
        <xsd:annotation>
          <xsd:documentation>contains all sub areas of this area</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="mobilityProperties" type="esdl:MobilityProperties">
        <xsd:annotation>
          <xsd:documentation>(experimental) Describes the number of vehicles and types in this area</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:name="KPIs" ecore:resolveProxies="true" minOccurs="0" name="KPIs" type="esdl:KPIs">
        <xsd:annotation>
          <xsd:documentation>List of KPIs relevant for this area</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="potential" type="esdl:Potential">
        <xsd:annotation>
          <xsd:documentation>Contains all energy potentials of this area, such as geothermal potential and wind potential</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="geometry" type="esdl:Geometry">
        <xsd:annotation>
          <xsd:documentation>Describes the physical geometry of this area</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="measures" type="esdl:Measures">
        <xsd:annotation>
          <xsd:documentation>Measures collection for a specific area. Allows you to specify different possibilities in different areas.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Unique id of this area</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="name" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Name for this area</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute default="UNDEFINED" ecore:unsettable="false" name="scope" type="esdl:AreaScopeEnum">
      <xsd:annotation>
        <xsd:documentation>The scope that this area describes, such as Country, Province, Energy Region, etc.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:unsettable="false" name="type" type="esdl:AreaTypeEnum">
      <xsd:annotation>
        <xsd:documentation>Type of area (e.g. road, terrain, water, etc.)</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:opposite="area" ecore:reference="esdl:Area" name="containingArea" type="xsd:anyURI">
      <xsd:annotation>
        <xsd:documentation>Refers to the area that contains this area, if not the top-level area</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:opposite="ownsArea" ecore:reference="esdl:Party" name="isOwnedBy" type="xsd:anyURI">
      <xsd:annotation>
        <xsd:documentation>Refers to the party owning the area (usually a government)</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="geometryReference" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>(experimental) Defines a URI to reference the geometric shape of this area</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:unsettable="false" name="buildingDensity" type="ecore:EDouble">
      <xsd:annotation>
        <xsd:documentation>(experimental) Defines the number of buildings per m2</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:reference="esdl:Sector" name="sector" type="xsd:anyURI"/>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="Port">
    <xsd:annotation>
      <xsd:documentation>Ports allow connections between EnergyAssets. Ports can be connected to one or more other ports. There are two types of ports: InPort and OutPort, which defines the primary direction of positive energy flow. InPorts can only be connected to OutPorts and vice versa.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="profile" type="esdl:GenericProfile">
        <xsd:annotation>
          <xsd:documentation>Contains the profile attached to this port. Profiles </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString" use="required">
      <xsd:annotation>
        <xsd:documentation>Unique identifier for this port</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:unsettable="false" name="maxPower" type="ecore:EDouble">
      <xsd:annotation>
        <xsd:documentation>Maximum power in Watt</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:opposite="port" ecore:reference="esdl:EnergyAsset" name="energyasset" type="xsd:anyURI" use="required">
      <xsd:annotation>
        <xsd:documentation>Refers to the parent asset this port belongs to</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:reference="esdl:Carrier" name="carrier" type="xsd:anyURI">
      <xsd:annotation>
        <xsd:documentation>Defines the carrier of this port</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:unsettable="false" name="simultaneousPower" type="ecore:EDouble">
      <xsd:annotation>
        <xsd:documentation>simultaneous power in Watt (under discussion)</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="name" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Name of the port</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="AggregatedProducer">
    <xsd:annotation>
      <xsd:documentation>Represents an aggregation of multiple producers as one aggregated producer. It allows you to reference the producers it is aggregated of by using the aggregationOf reference. Can be used to aggregate a heterogeneous collection of producers (e.g. of different types)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Producer">
        <xsd:attribute ecore:reference="esdl:Producer" name="aggregationOf">
          <xsd:simpleType>
            <xsd:list itemType="xsd:anyURI"/>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="AreaScopeEnum">
    <xsd:annotation>
      <xsd:documentation>The scope of the area: Building, Street, ZipCode, Neighbourhood, District, Municipality, City, etc.
</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="BUILDING"/>
      <xsd:enumeration value="STREET"/>
      <xsd:enumeration value="ZIPCODE"/>
      <xsd:enumeration value="NEIGHBOURHOOD"/>
      <xsd:enumeration value="DISTRICT"/>
      <xsd:enumeration value="VILLAGE"/>
      <xsd:enumeration value="CITY"/>
      <xsd:enumeration value="MUNICIPALITY"/>
      <xsd:enumeration value="REGION"/>
      <xsd:enumeration value="PROVINCE"/>
      <xsd:enumeration value="STATE"/>
      <xsd:enumeration value="COUNTRY"/>
      <xsd:enumeration value="CONTINENT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ProfileTypeEnum">
    <xsd:annotation>
      <xsd:documentation>(deprecated in future version, to be replaced with Quantity and Units)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="SOLARIRRADIANCE_IN_W_PER_M2"/>
      <xsd:enumeration value="WINDSPEED_IN_M_PER_S"/>
      <xsd:enumeration value="STATEOFCHARGE_IN_WS"/>
      <xsd:enumeration value="ENERGY_IN_WH"/>
      <xsd:enumeration value="ENERGY_IN_KWH"/>
      <xsd:enumeration value="ENERGY_IN_MWH"/>
      <xsd:enumeration value="ENERGY_IN_GWH"/>
      <xsd:enumeration value="ENERGY_IN_J"/>
      <xsd:enumeration value="ENERGY_IN_KJ"/>
      <xsd:enumeration value="ENERGY_IN_MJ"/>
      <xsd:enumeration value="ENERGY_IN_GJ"/>
      <xsd:enumeration value="ENERGY_IN_TJ"/>
      <xsd:enumeration value="ENERGY_IN_PJ"/>
      <xsd:enumeration value="TEMPERATURE_IN_C"/>
      <xsd:enumeration value="TEMPERATURE_IN_K"/>
      <xsd:enumeration value="POWER_IN_W"/>
      <xsd:enumeration value="POWER_IN_KW"/>
      <xsd:enumeration value="POWER_IN_MW"/>
      <xsd:enumeration value="POWER_IN_GW"/>
      <xsd:enumeration value="POWER_IN_TW"/>
      <xsd:enumeration value="MONEY_IN_EUR"/>
      <xsd:enumeration value="MONEY_IN_KEUR"/>
      <xsd:enumeration value="MONEY_IN_MEUR"/>
      <xsd:enumeration value="PERCENTAGE"/>
      <xsd:enumeration value="MONEY_IN_EUR_PER_KW"/>
      <xsd:enumeration value="MONEY_IN_EUR_PER_KWH"/>
      <xsd:enumeration value="VOLUME_IN_M3"/>
      <xsd:enumeration value="VOLUME_IN_LITERS"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DurationUnitEnum">
    <xsd:annotation>
      <xsd:documentation>Specified a time period</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SECOND"/>
      <xsd:enumeration value="MINUTE"/>
      <xsd:enumeration value="HOUR"/>
      <xsd:enumeration value="DAY"/>
      <xsd:enumeration value="WEEK"/>
      <xsd:enumeration value="MONTH"/>
      <xsd:enumeration value="YEAR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="InPort">
    <xsd:annotation>
      <xsd:documentation>Represents a port with a positive energy direction into the asset, e.g. for a Consumer. See Port for more details</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Port">
        <xsd:attribute ecore:opposite="connectedTo" ecore:reference="esdl:OutPort" name="connectedTo">
          <xsd:simpleType>
            <xsd:list itemType="xsd:anyURI"/>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="OutPort">
    <xsd:annotation>
      <xsd:documentation>Represents a port with a positive energy direction out of the asset, e.g. for a Producer. See Port for more details</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Port">
        <xsd:attribute ecore:opposite="connectedTo" ecore:reference="esdl:InPort" name="connectedTo">
          <xsd:simpleType>
            <xsd:list itemType="xsd:anyURI"/>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="Asset">
    <xsd:annotation>
      <xsd:documentation>Assets are all physical thing in the EnergySystem. Assets can have a location, a geometry, commissioning and decommissioning dates, cost information (investment, installation and operation and maintenance costs).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Item">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="geometry" type="esdl:Geometry">
            <xsd:annotation>
              <xsd:documentation>Describes the physical geometry of this asset. Can be a point location or a polygon</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="costInformation" type="esdl:CostInformation"/>
          <xsd:element ecore:name="KPIs" ecore:resolveProxies="true" minOccurs="0" name="KPIs" type="esdl:KPIs"/>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="material" type="esdl:AbstractMatter">
            <xsd:annotation>
              <xsd:documentation>Allows for describing of what material(s) the Asset is made</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute ecore:unsettable="false" name="surfaceArea" nl.tno.esdl.attribute.unit:unit="m²" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>The surface that is occupied by this asset in m2</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="commissioningDate" type="ecore:EDate">
          <xsd:annotation>
            <xsd:documentation>If this date is in the future it is a planned asset in this energy system</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="decommissioningDate" type="ecore:EDate">
          <xsd:annotation>
            <xsd:documentation>If this date is in the past, it is an asset that has been decommissioned</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="owner" type="ecore:EString">
          <xsd:annotation>
            <xsd:documentation>Defines the owner of an asset (free text). Use the isOwnedBy relationship to refer to a Party</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:opposite="asset" ecore:reference="esdl:Area" name="area" type="xsd:anyURI"/>
        <xsd:attribute ecore:opposite="asset" ecore:reference="esdl:AbstractBuilding" name="containingBuilding" type="xsd:anyURI"/>
        <xsd:attribute ecore:unsettable="false" name="technicalLifetime" nl.tno.esdl.attribute.unit:unit="years" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>in years</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="aggregated" type="ecore:EBoolean">
          <xsd:annotation>
            <xsd:documentation>Defines if this Asset is aggregated of other assets of the same type</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="1" ecore:unsettable="false" name="aggregationCount" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>Number of assets that are aggregated</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="installationDuration" nl.tno.esdl.attribute.unit:unit="days" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>the time required to install the asset (e.g. for calculating the effects on employment or the time it takes to construct and install the asset) in days</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="assetType" type="ecore:EString">
          <xsd:annotation>
            <xsd:documentation>the type (e.g. model number) of the asset</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="state" type="esdl:AssetStateEnum"/>
        <xsd:attribute name="manufacturer" type="ecore:EString"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GenericConsumer">
    <xsd:annotation>
      <xsd:documentation>Generic consumer class that can be used in cases that the actual asset type is not important or not supported yet in ESDL</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Consumer"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GenericProducer">
    <xsd:annotation>
      <xsd:documentation>Generic producer class that can be used in cases that the actual asset type is not important or not supported yet in ESDL</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Producer"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GenericStorage">
    <xsd:annotation>
      <xsd:documentation>Generic storage class that can be used in cases that the actual asset type is not important or not supported yet in ESDL</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Storage"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GenericTransport">
    <xsd:annotation>
      <xsd:documentation>Generic transport class that can be used in cases that the actual asset type is not important or not supported yet in ESDL</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Transport"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GenericConversion">
    <xsd:annotation>
      <xsd:documentation>Generic conversion class that can be used in cases that the actual asset type is not important or not supported yet in ESDL</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Conversion"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AggregatedTransport">
    <xsd:annotation>
      <xsd:documentation>Represents an aggregation of multiple transport assets as one aggregated transport asset. It allows you to reference the transport asset it is aggregated of by using the aggregationOf reference. Can be used to aggregate a heterogeneous collection of transport assets (e.g. of different types)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Transport">
        <xsd:attribute ecore:reference="esdl:Transport" name="aggregationOf">
          <xsd:simpleType>
            <xsd:list itemType="xsd:anyURI"/>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AggregatedConversion">
    <xsd:annotation>
      <xsd:documentation>Represents an aggregation of multiple conversion assets as one aggregated conversion asset. It allows you to reference the conversion asset it is aggregated of by using the aggregationOf reference. Can be used to aggregate a heterogeneous collection of conversion assets (e.g. of different types)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Conversion">
        <xsd:attribute ecore:reference="esdl:Conversion" name="aggregationOf">
          <xsd:simpleType>
            <xsd:list itemType="xsd:anyURI"/>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AggregatedStorage">
    <xsd:annotation>
      <xsd:documentation>Represents an aggregation of multiple storage assets as one aggregated storage asset. It allows you to reference the storage asset it is aggregated of by using the aggregationOf reference. Can be used to aggregate a heterogeneous collection of storage assets (e.g. of different types)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Storage">
        <xsd:attribute ecore:reference="esdl:Storage" name="aggregationOf">
          <xsd:simpleType>
            <xsd:list itemType="xsd:anyURI"/>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="BuildingTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the different types of buildings. This list is a combination of different lists that are used in the Netherlands for differentiating datasets (on buildings or building related information):

- One of these lists is the Dutch BAG (Basisregistratie Adressen en Gebouwen or Registry of Addresses and Buildings). Within the BAG this parameter is called "usage purpose" (gebruiksdoel). 
- Other datasets only differentiate between residential and utility (the so called "built environment" in Dutch). The category utility doesn't exist in the BAG list of usage purposes; within the BAG the utility has been split up into many different categories.
- Furthermore AGRICULTURE and GREENHOUSE have been added to this list for cases where these need to be differentiated (Within the BAG these two categories fall under INDUSTRY). </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="RESIDENTIAL"/>
      <xsd:enumeration value="GATHERING"/>
      <xsd:enumeration value="PRISON"/>
      <xsd:enumeration value="HEALTHCARE"/>
      <xsd:enumeration value="INDUSTRY"/>
      <xsd:enumeration value="OFFICE"/>
      <xsd:enumeration value="EDUCATION"/>
      <xsd:enumeration value="SPORTS"/>
      <xsd:enumeration value="SHOPPING"/>
      <xsd:enumeration value="HOTEL"/>
      <xsd:enumeration value="AGRICULTURE"/>
      <xsd:enumeration value="GREENHOUSE"/>
      <xsd:enumeration value="UTILITY"/>
      <xsd:enumeration value="OTHER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType abstract="true" name="GenericBuilding">
    <xsd:annotation>
      <xsd:documentation>Represents a physical building</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractBuilding">
        <xsd:sequence>
          <xsd:element default="UNDEFINED" ecore:unique="true" maxOccurs="unbounded" minOccurs="0" name="type" type="esdl:BuildingTypeEnum">
            <xsd:annotation>
              <xsd:documentation>Describes the building types as defined by RVO in the Netherlands, in dutch for now, e.g. Vrijstaande woning, Rijwoning, Flatwoning, Hoekwoning</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="address" type="esdl:Address"/>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="buildinginformation" type="esdl:BuildingInformation"/>
        </xsd:sequence>
        <xsd:attribute ecore:unsettable="false" name="buildingYear" type="ecore:EInt"/>
        <xsd:attribute ecore:unsettable="false" name="floorArea" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>in m2</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="numberOfFloors" type="ecore:EInt"/>
        <xsd:attribute default="UNDEFINED" ecore:unsettable="false" name="energyLabel" type="esdl:EnergyLabelEnum"/>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="energyIndex" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="ConsTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Consumer type, i.e. primary energy or final energy</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PRIMARY"/>
      <xsd:enumeration value="FINAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="HeatStorage">
    <xsd:annotation>
      <xsd:documentation>Generic heat storage asset with min and max temperatures</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Storage">
        <xsd:attribute ecore:unsettable="false" name="minStorageTemperature" nl.tno.esdl.attribute.unit:unit="°C" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="maxStorageTemperature" nl.tno.esdl.attribute.unit:unit="°C" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GasHeater">
    <xsd:annotation>
      <xsd:documentation>Converts gas to heat, e.g. a gas boiler or gas heater</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Conversion">
        <xsd:attribute default="0.0" ecore:unsettable="false" name="minimumBurnRate" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="type" type="esdl:GasHeaterTypeEnum"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="HeatNetwork">
    <xsd:annotation>
      <xsd:documentation>Describes an complete heat network, without detailing the complete topology. It is a Transport capability</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:EnergyNetwork">
        <xsd:attribute ecore:unsettable="false" name="temperature" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="temperatureMin" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="temperatureMax" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GasNetwork">
    <xsd:annotation>
      <xsd:documentation>Describes an complete gas network, without detailing the complete topology. It is a Transport capability</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:EnergyNetwork">
        <xsd:attribute ecore:unsettable="false" name="pressure" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Insulation">
    <xsd:annotation>
      <xsd:documentation>Describes insulation that can be added to a building. The relation with the heat consumption is not defined and requires manual modelling</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Asset">
        <xsd:attribute ecore:unsettable="false" name="thermalInsulation" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Import">
    <xsd:annotation>
      <xsd:documentation>Represents a source that delivers imported energy into the current energy system. Used to model the rest of the energy system that is out of the current scope</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Producer"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Export">
    <xsd:annotation>
      <xsd:documentation>Represents a consumer that consumes exported energy from the current energy system. Used to model the rest of the energy system that is out of the current scope</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Consumer"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Pipe">
    <xsd:annotation>
      <xsd:documentation>Represents a pipe to transport gasses or fluids. When defining the geometry of a pipe by means of a line, the first point of the line refers to the first port and the last point of the line refers to the second port.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractConductor">
        <xsd:attribute default="0.0" ecore:unsettable="false" name="innerDiameter" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Inner diameter of pipe in meters</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="outerDiameter" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Outer diameter of pipe in meters</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="length" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Length of the pipe in meters</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="roughness" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Roughness of the pipe in meters</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="diameter" type="esdl:PipeDiameterEnum">
          <xsd:annotation>
            <xsd:documentation>Defines the pipe diameter using DN standard. A pipe catalog is required to translate these DN sizes to actual diameters (in meter). When using the default value for this field (VALUE_SPECIFIED), both innerDIameter and outerDiameter fields are used, instead of the values in this Enumeration.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GeothermalSource">
    <xsd:annotation>
      <xsd:documentation>Geothermal source including the installation that connects the source to the network</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:HeatProducer">
        <xsd:attribute ecore:unsettable="false" name="wellDepth" nl.tno.esdl.attribute.unit:unit="m" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>in m</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="geothermalSourceType" type="esdl:GeothermalSourceTypeEnum">
          <xsd:annotation>
            <xsd:documentation>type of production of this source, e.g. Heat or Electricity</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:name="COP" ecore:unsettable="false" name="COP" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Coefficient of Performance of this source</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="aquiferTemperature" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>in degrees Celcius</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="flowRate" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>in kg/s</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="pumpPower" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>in Watt</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:opposite="geothermalSource" ecore:reference="esdl:AbstractGTPotential" name="geothermalPotential" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>references the potential this source is part of</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="CoGeneration">
    <xsd:annotation>
      <xsd:documentation>Abstract asset describing a co-generation plant that produces heat and electricity</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Conversion">
        <xsd:attribute default="0.0" ecore:unsettable="false" name="heatEfficiency" type="ecore:EDouble"/>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="electricalEfficiency" type="ecore:EDouble"/>
        <xsd:attribute ecore:reference="esdl:EnergyCarrier" name="energyCarrier" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>(legacy/experimental) input energy carrier of this plant</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:name="HERatio" ecore:unsettable="false" name="HERatio" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Ratio between heat and electricity in its output</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="fuelType" type="esdl:PowerPlantFuelEnum">
          <xsd:annotation>
            <xsd:documentation>(legacy/experimental) fuel type of this plant</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="leadCommodity" type="esdl:CommodityEnum"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="HeatPump">
    <xsd:annotation>
      <xsd:documentation>Describes a Heat Pump</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Conversion">
        <xsd:attribute ecore:unsettable="false" name="source" type="esdl:SourceTypeEnum">
          <xsd:annotation>
            <xsd:documentation>Type of the source, e.g. Air, subsurface, aquifer</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="1" ecore:unsettable="false" name="stages" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>number of heat pump stages</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:name="COP" ecore:unsettable="false" name="COP" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Coefficient of performance of this Heat Pump</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="additionalHeatingSourceType" type="esdl:AdditionalHeatingSourceTypeEnum">
          <xsd:annotation>
            <xsd:documentation>(legacy/experimental) In case of hybrid usage</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="SourceTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Type of the source, e.g. Air, subsurface, aquifer</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="AIR"/>
      <xsd:enumeration value="SUB_SURFACE"/>
      <xsd:enumeration value="AQUIFER"/>
      <xsd:enumeration value="SURFACE_WATER"/>
      <xsd:enumeration value="HEAT_NETWORK"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AggrTypeEnum">
    <xsd:annotation>
      <xsd:documentation>(under discussion) Describes how something is aggregated. Terms are currently not mutual exclusive and collectively exhaustive (MECE)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="NOT_AGGREGATED"/>
      <xsd:enumeration value="PER_COMMODITY"/>
      <xsd:enumeration value="TOTAL_ENERGY"/>
      <xsd:enumeration value="TOTAL_CAPABILITY"/>
      <xsd:enumeration value="PER_CAPIBILITY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AreaTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Type of area (e.g. road, terrain, water, etc.)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="ROAD"/>
      <xsd:enumeration value="RAILWAY"/>
      <xsd:enumeration value="TERRAIN"/>
      <xsd:enumeration value="RURAL_AREA"/>
      <xsd:enumeration value="BUILT"/>
      <xsd:enumeration value="WATER"/>
      <xsd:enumeration value="SEA"/>
      <xsd:enumeration value="RIVER"/>
      <xsd:enumeration value="CANAL"/>
      <xsd:enumeration value="LAKE"/>
      <xsd:enumeration value="LAND"/>
      <xsd:enumeration value="PARCEL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="HeatingDemand">
    <xsd:annotation>
      <xsd:documentation>Describes the heating demand of e.g. a household, area, etc.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Consumer">
        <xsd:attribute ecore:unsettable="false" name="type" type="esdl:HeatDemandTypeEnum"/>
        <xsd:attribute ecore:unsettable="false" name="deviceType" type="esdl:HeatRadiationDeviceTypeEnum"/>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="minTemperature" nl.tno.esdl.attribute.unit:unit="°C" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Minimum required input temperature (in degrees Celcuis)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="maxTemperature" nl.tno.esdl.attribute.unit:unit="°C" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Maximum allowed input temperature (in degrees Celcuis)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="HeatDemandTypeEnum">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="SPACE_HEATING"/>
      <xsd:enumeration value="HOT_TAPWATER"/>
      <xsd:enumeration value="SH_AND_HTW"/>
      <xsd:enumeration value="COOKING"/>
      <xsd:enumeration value="OTHER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="ElectricityDemand">
    <xsd:annotation>
      <xsd:documentation>Describes the electricity demand of e.g. a household, area, etc.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Consumer"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GasDemand">
    <xsd:annotation>
      <xsd:documentation>Describes the gas demand of e.g. a household, area, etc. This can be used for all types of gasses (e.g. CO2, Natural Gas, Hydrogen, etc.)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Consumer"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GeothermalPotential">
    <xsd:annotation>
      <xsd:documentation>Defines the geothermal potential in a specific area. This type focusses on temperature and depth of the well. See GeothermalEnergyPotental for class focussing on Energy</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractGTPotential">
        <xsd:attribute ecore:unsettable="false" name="temperature" type="ecore:EInt"/>
        <xsd:attribute ecore:unsettable="false" name="depth" type="ecore:EInt"/>
        <xsd:attribute ecore:unsettable="false" name="potential" type="esdl:GeothermalPotentialEnum"/>
        <xsd:attribute default="UNKNOWN" ecore:unsettable="false" name="powerPerDoublet" type="esdl:GeothermalPowerEnum"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Point">
    <xsd:annotation>
      <xsd:documentation>Describes a point geometry, which can be used for giving assets a location on a map</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Geometry">
        <xsd:attribute ecore:unsettable="false" name="lat" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="lon" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="elevation" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Polygon">
    <xsd:annotation>
      <xsd:documentation>Describes a polygon geometry, which can be used for defining the shape of an area or building</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Geometry">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" name="exterior" type="esdl:SubPolygon"/>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="interior" type="esdl:SubPolygon"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="OwnershipRentalTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the type of ownership such as Private, Rental or Housing association</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="PRIVATELY_OWNED"/>
      <xsd:enumeration value="PRIVATE_RENTAL"/>
      <xsd:enumeration value="HOUSING_ASSOCIATION"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="EconomicProperties">
    <xsd:annotation>
      <xsd:documentation>(experimental) Can be used to define the economic properties of an area</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ecore:unsettable="false" name="averageIncome" type="ecore:EDouble">
      <xsd:annotation>
        <xsd:documentation>in euro</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:unsettable="false" name="averageWOZvalue" type="ecore:EDouble"/>
    <xsd:attribute ecore:unsettable="false" name="percentageOwnerOccupiedProperties" type="ecore:EDouble"/>
    <xsd:attribute ecore:unsettable="false" name="percentageHousingAssociation" type="ecore:EDouble"/>
    <xsd:attribute ecore:unsettable="false" name="percentagePrivateRental" type="ecore:EDouble"/>
  </xsd:complexType>
  <xsd:complexType name="SocialProperties">
    <xsd:annotation>
      <xsd:documentation>(experimental) Can be used to define the social properties of an area</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ecore:unsettable="false" name="socialCohesion" type="ecore:EDouble"/>
    <xsd:attribute ecore:unsettable="false" name="populationDensity" type="ecore:EInt"/>
    <xsd:attribute ecore:unsettable="false" name="numberOfInhabitants" type="ecore:EInt"/>
  </xsd:complexType>
  <xsd:complexType name="LegalArea">
    <xsd:annotation>
      <xsd:documentation>Used to define an area in which its purpose is defined by legal authorities, such as restricted areas. E.g. in areas where water is extracted, it is not allowed to plan new UTES.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Potential">
        <xsd:attribute name="purpose" type="ecore:EString">
          <xsd:annotation>
            <xsd:documentation/>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="RoofTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Type of roof (slanted / flat / combined)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="FLATROOF"/>
      <xsd:enumeration value="SLANTEDROOF"/>
      <xsd:enumeration value="COMBINATION"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EnergyLabelEnum">
    <xsd:annotation>
      <xsd:documentation>Dutch system for energy labels for residential buildings, e.g. Label A, B, F</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="LABEL_G"/>
      <xsd:enumeration value="LABEL_F"/>
      <xsd:enumeration value="LABEL_E"/>
      <xsd:enumeration value="LABEL_D"/>
      <xsd:enumeration value="LABEL_C"/>
      <xsd:enumeration value="LABEL_B"/>
      <xsd:enumeration value="LABEL_A"/>
      <xsd:enumeration value="LABEL_AP"/>
      <xsd:enumeration value="LABEL_APP"/>
      <xsd:enumeration value="LABEL_APPP"/>
      <xsd:enumeration value="LABEL_APPPP"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType abstract="true" name="EnergyService">
    <xsd:annotation>
      <xsd:documentation>Abstract class to represent logical entities in the energy system, e.g. demand response services, energy markets, etc.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Service"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DemandResponseService">
    <xsd:annotation>
      <xsd:documentation>Indicates a service supporting demand response in the energy system</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:EnergyService"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Transformer">
    <xsd:annotation>
      <xsd:documentation>Electrical transformer between different voltage levels</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractTransformer">
        <xsd:attribute ecore:unsettable="false" name="voltagePrimary" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="voltageSecundary" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="HeatExchange">
    <xsd:annotation>
      <xsd:documentation>Exchange heat between two circuits</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractTransformer">
        <xsd:attribute ecore:unsettable="false" name="heatTransferCoefficient" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The heat transfer coefficient in W/K</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="lengthPrimarySide" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="diameterPrimarySide" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="roughnessPrimarySide" type="ecore:EDouble"/>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="lengthSecundarySide" type="ecore:EDouble"/>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="diameterSecundarySide" type="ecore:EDouble"/>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="roughnessSecundarySide" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="ResidentialBuildingTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the RVO woningtypes, such as vrijstaande woning, flat woning, hoekwoning</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="VRIJSTAANDE_WONING"/>
      <xsd:enumeration value="TWEE_ONDER_EEN_KAP_WONING"/>
      <xsd:enumeration value="RIJWONING"/>
      <xsd:enumeration value="MAISONNETTEWONING"/>
      <xsd:enumeration value="GALERIJWONING"/>
      <xsd:enumeration value="PORTIEKWONING"/>
      <xsd:enumeration value="FLATWONING"/>
      <xsd:enumeration value="TUSSENWONING"/>
      <xsd:enumeration value="HOEKWONING"/>
      <xsd:enumeration value="GALERIJCOMPLEX"/>
      <xsd:enumeration value="APPARTEMENTENCOMPLEX"/>
      <xsd:enumeration value="APPARTEMENT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType abstract="true" name="Item">
    <xsd:annotation>
      <xsd:documentation>Class describing an abstract thing in an energy system. It is the parent of many other classes in ESDL, such as Assets, Services and Potentials. Parties can own Items</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="dataSource" type="esdl:AbstractDataSource">
        <xsd:annotation>
          <xsd:documentation>Reference to the datasource where the information in this object is coming from</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Unique identifier for this object</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="name" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Name describing this object</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="shortName" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Short name for this object, e.g. used in legends of graphs in presentations</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:opposite="owns" ecore:reference="esdl:Party" name="isOwnedBy" type="xsd:anyURI">
      <xsd:annotation>
        <xsd:documentation>Refers to the owner of this object</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="description" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Human readable description of this object</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="originalIdInSource" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>ID of item in the original data source. Can be used to make links to the original data</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:reference="esdl:Sector" name="sector" type="xsd:anyURI">
      <xsd:annotation>
        <xsd:documentation>Refers to the sector this object is used in</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="Measures">
    <xsd:annotation>
      <xsd:documentation>Collection of measures that can be applied to an energy system</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Item">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="measure" type="esdl:AbstractMeasure"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="EConnection">
    <xsd:annotation>
      <xsd:documentation>Electricity connection of a building. Defines the demarcation between the inhouse network and the electricity grid (location where the (smart) meter is located)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractConnection">
        <xsd:attribute ecore:name="EANCode" name="EANCode" type="ecore:EString"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="HConnection">
    <xsd:annotation>
      <xsd:documentation>Heat connection of a building. Defines the demarcation between the inhouse network and the heat grid (location where the (smart) meter is located)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractConnection"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GConnection">
    <xsd:annotation>
      <xsd:documentation>Gas connection of a building. Defines the demarcation between the inhouse network and the gas grid (location where the (smart) meter is located)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractConnection"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="PowerPlant">
    <xsd:annotation>
      <xsd:documentation>Defines an electricity generating plant</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Conversion">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="mustRun" type="esdl:GenericProfile"/>
        </xsd:sequence>
        <xsd:attribute ecore:unsettable="false" name="fuel" type="esdl:PowerPlantFuelEnum"/>
        <xsd:attribute ecore:unsettable="false" name="maxLoad" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>The maximum allowed load in Watt</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="minLoad" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>The minimum allowed load in Watt</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="effMaxLoad" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The efficiency of the power plant at maximum load</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="effMinLoad" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The efficiency of the power plant at minimum load</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:reference="esdl:EnergyCarrier" name="energyCarrier" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>Reference to the source of the plant</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="PowerPlantFuelEnum">
    <xsd:annotation>
      <xsd:documentation>(to be removed) Type of fuel of this plant</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="COAL"/>
      <xsd:enumeration value="BLAST_FURNACE_GAS"/>
      <xsd:enumeration value="NATURAL_GAS"/>
      <xsd:enumeration value="URANIUM"/>
      <xsd:enumeration value="HYDROGEN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType abstract="true" name="AbstractBuilding">
    <xsd:annotation>
      <xsd:documentation>Describes the shared properties of building, building unit and aggregated building</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Asset">
        <xsd:sequence>
          <xsd:element ecore:opposite="containingBuilding" ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="asset" type="esdl:Asset"/>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="buildingUsage" type="esdl:AbstractBuildingUsage"/>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="potential" type="esdl:Potential"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Instance">
    <xsd:annotation>
      <xsd:documentation>Instances are used to represent different representations of the same EnergySystem. Most of the times only one Instance will be used. The primary use case for having more than one Instance is when you have different aggregations of the same EnergySystem in the same model (e.g. the same region on house level and aggregated on neighbourhood level). Another option would be to create different instances for different years (to describe the progress of the energy transition).</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="area" type="esdl:Area">
        <xsd:annotation>
          <xsd:documentation>Top level area of this instance</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="date" type="esdl:AbstractInstanceDate">
        <xsd:annotation>
          <xsd:documentation>Defines the time aspect of the data in this instance, e.g. a snapshot in time or a range in time where this instance is valid</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Unique identifier for this instance</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="name" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Name of the instance</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="description" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Human readable description of this instance</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute default="UNDEFINED" ecore:unsettable="false" name="detailLevel" type="esdl:AreaScopeEnum">
      <xsd:annotation>
        <xsd:documentation>(experimental) Scope of the instance, e.g. Country or Municipality</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:unsettable="false" name="aggrType" type="esdl:AggrTypeEnum">
      <xsd:annotation>
        <xsd:documentation>(experimental) defines how the data in this instance is aggregated, e.g. by commodity, total energy, per capability, etc.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="Service">
    <xsd:annotation>
      <xsd:documentation>Abstract class to represent logical entities in the energy system, e.g. demand response services, energy markets, etc.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Item"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AggregatorService">
    <xsd:annotation>
      <xsd:documentation>Indicates a aggregator service exploiting flexibility in the energy system</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:EnergyService"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="EVChargingStation">
    <xsd:annotation>
      <xsd:documentation>Represents a charging station for electrical vehicles. Both single private-owned car chargers and public charging spaces can be modelled by this class</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Consumer"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="Potential">
    <xsd:annotation>
      <xsd:documentation>Abstract class that represents energy potentials in an area, like wind potential, geothermal potential, residual heat source potential, etc.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Item">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="geometry" type="esdl:Geometry"/>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="quantityAndUnit" type="esdl:AbstractQuantityAndUnit">
            <xsd:annotation>
              <xsd:documentation>determines the used quantity and unit of the value attribute in the potential class </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="geometryReference" type="ecore:EString"/>
        <xsd:attribute default="false" ecore:unsettable="false" name="aggregated" type="ecore:EBoolean"/>
        <xsd:attribute default="1" ecore:unsettable="false" name="aggregationCount" type="ecore:EInt"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="WindPotential">
    <xsd:annotation>
      <xsd:documentation>Defines the potential for wind energy. This class can be used instead of 'SearchAreaWind' in case there is more information available.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Potential">
        <xsd:attribute ecore:unsettable="false" name="value" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Can be used to express the amount of potential energy that can be harvested in this area. Attach a 'QuantityAndUnit' instance to express the unit of energy (e.g. ENERGY in GJ)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="fullLoadHours" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>The number of hours which multiplied with the installed capacity will give the production during one year.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="area" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The calculated surface area for this potential (in square meters).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="height" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The height of the windturbines for which this potential is calculated.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AggregatedBuilding">
    <xsd:annotation>
      <xsd:documentation>Represents more than one building aggregated into one entity. It supports different types of aggregation, such as building type, energy label etc.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractBuilding">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="energyLabelDistribution" type="esdl:EnergyLabelDistribution"/>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="buildingYearDistribution" type="esdl:FromToDistribution"/>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="buildingTypeDistribution" type="esdl:BuildingTypeDistribution"/>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="residentialBuildingTypeDistribution" type="esdl:ResidentialBuildingTypeDistribution"/>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="ownershipRentalTypeDistribution" type="esdl:OwnershipRentalTypeDistribution"/>
        </xsd:sequence>
        <xsd:attribute ecore:reference="esdl:AbstractBuilding" name="aggregationOf">
          <xsd:simpleType>
            <xsd:list itemType="xsd:anyURI"/>
          </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="numberOfBuildings" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>(to be removed) Is replaced by the asset parameter aggregationCount</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="floorArea" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="SectorEnum">
    <xsd:annotation>
      <xsd:documentation>(to be removed)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="GEBOUWDE_OMGEVING"/>
      <xsd:enumeration value="ZAKELIJKE_DIENSTVERLENING"/>
      <xsd:enumeration value="INDUSTRIE"/>
      <xsd:enumeration value="AGRO_TUINBOUW"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="EnergyCarrier">
    <xsd:annotation>
      <xsd:documentation>Defines a carrier of energy with its emission and energy content properties</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Carrier">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="energyContentUnit" type="esdl:AbstractQuantityAndUnit"/>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="emissionUnit" type="esdl:AbstractQuantityAndUnit"/>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="composition" type="esdl:AbstractMatter">
            <xsd:annotation>
              <xsd:documentation>Allows describing the composition of the energy carrier into different Fuels</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="energyContent" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The energycontent of the fuel. The unit must be defined by the energyContentUnit attribute.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="emission" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The amount of emission (CO2, NOx) produced when a fuel is burned. The unit must be defined by the emissionUnit attribute.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="energyCarrierType" type="esdl:RenewableTypeEnum"/>
        <xsd:attribute default="UNDEFINED" ecore:unsettable="false" name="stateOfMatter" type="esdl:StateOfMatterEnum"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Losses">
    <xsd:annotation>
      <xsd:documentation>Used to define losses explicitly (as a Consumer capability)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Consumer"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="PowerToX">
    <xsd:annotation>
      <xsd:documentation>Represents the ability to convert electricity to some other form of energy</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Conversion"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CCS">
    <xsd:annotation>
      <xsd:documentation>Represents Carbon Capture and Storage</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Storage"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="RenewableTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Type of energy: Fossil or Renewable</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="RENEWABLE"/>
      <xsd:enumeration value="FOSSIL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="StateOfMatterEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the state of matter of the energy carrier (gaseous, liquid, solid)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="SOLID"/>
      <xsd:enumeration value="LIQUID"/>
      <xsd:enumeration value="GASEOUS"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="Carriers">
    <xsd:annotation>
      <xsd:documentation>Collection of carriers as part of the Energy System Information. Both energy carriers and commodities.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="carrier" type="esdl:Carrier"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="dataSource" type="esdl:AbstractDataSource"/>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString"/>
  </xsd:complexType>
  <xsd:complexType name="FuelCell">
    <xsd:annotation>
      <xsd:documentation>Defines a Fuel Cell</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:CoGeneration"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XToPower">
    <xsd:annotation>
      <xsd:documentation>Represents the ability to convert some other form of energy to electricity</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Conversion"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="EnergySystemInformation">
    <xsd:annotation>
      <xsd:documentation>Describes reusable information of the energy system, that other classes can refer to in this energy system, such as carriers, profiles, data sources, quantity and units.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="carriers" type="esdl:Carriers"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="profiles" type="esdl:Profiles"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="dataSources" type="esdl:DataSources"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="mobilityFuelInformation" type="esdl:MobilityFuelInformation"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="quantityAndUnits" type="esdl:QuantityAndUnits"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="sectors" type="esdl:Sectors"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="buildingUsageInformation" type="esdl:BuildingUsageInformation"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="notes" type="esdl:Notes"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="matters" type="esdl:Matters"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="environmentalProfiles" type="esdl:EnvironmentalProfiles"/>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString"/>
  </xsd:complexType>
  <xsd:complexType name="Pump">
    <xsd:annotation>
      <xsd:documentation>Defines a pump, e.g. in a water or heat network</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractTransformer">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="pumpCurveTable" type="esdl:Table">
            <xsd:annotation>
              <xsd:documentation>The pump curve specified as a table</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute ecore:unsettable="false" name="pumpCapacity" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Capacity of the pump in m3/h</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="pumpEfficiency" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Efficiency of the pump.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="polarMomentOfInertia" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The polar moment of inertia of the pump in kg/m2</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="ratedSpeed" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The rated speed of the pump in rad/s</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Valve">
    <xsd:annotation>
      <xsd:documentation>Defines a valve, e.g. in a water, gas or heat network</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractActiveSwitch">
        <xsd:attribute ecore:unsettable="false" name="type" type="esdl:ValveTypeEnum">
          <xsd:annotation>
            <xsd:documentation>Type of valve.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="flowCoefficient" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Flow coefficient (kv) in metric units [m3/h]. It is defined as the flow rate in cubic meters per hour [m3/h] of water at a temperature of 16º celsius with a pressure drop across the valve of 1 bar.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="innerDiameter" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The inner diameter of the valve in meters. Can be used to calculate the loss coefficient of the valve using the kv parameter.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="GenericProfile">
    <xsd:annotation>
      <xsd:appinfo ecore:key="operations" source="http://www.eclipse.org/emf/2002/Ecore">
        <operation name="getProfile" type="esdl:ProfileElement" upperBound="-1">
          <parameter name="from" type="ecore:EDate"/>
          <parameter name="to" type="ecore:EDate"/>
          <parameter name="aggregationPrecision" type="esdl:Duration"/>
        </operation>
        <operation name="setProfile" type="ecore:EBoolean">
          <parameter name="profileElementList" type="esdl:ProfileElement" upperBound="-1"/>
        </operation>
      </xsd:appinfo>
      <xsd:documentation>All profiles should describe these fields: a name and a ProfileType. There are two different profile types: static, with static values stored in the ESDL model itself. And External, which allows you to refer to an externally defined profile (e.g. in an Energy Information System or a timeseries database)</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="dataSource" type="esdl:AbstractDataSource"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="profileQuantityAndUnit" type="esdl:AbstractQuantityAndUnit"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="ecore:EString"/>
    <xsd:attribute default="UNDEFINED" ecore:unsettable="false" name="profileType" type="esdl:ProfileTypeEnum"/>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString"/>
    <xsd:attribute default="UNDEFINED" ecore:unsettable="false" name="interpolationMethod" type="esdl:InterpolationMethodEnum"/>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="StaticProfile">
    <xsd:annotation>
      <xsd:documentation>Stores the profile in the ESDL model itself, in contrast with an external profile, which refers to an external source for a profile</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:GenericProfile"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DateTimeProfile">
    <xsd:annotation>
      <xsd:documentation>Describes a profile using one or more Profile elements. Each element defines a from- and a to-datetime and a value which is valid for this range. The to-field may be ommitted, meaning this value is valid for all time after the to-date.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:StaticProfile">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" name="element" type="esdl:ProfileElement">
            <xsd:annotation>
              <xsd:documentation>List of profile elements. Should have at least one element.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ProfileElement">
    <xsd:annotation>
      <xsd:documentation>ProfileElement describes a single profile element describing a range and a value which is valid for this range. From-field is inclusive, To-field is exclusive, allowing you to describe ranges such as 1-1-2017T00:00:00.000 to 1-1-2018T00:00:00.000 instead of 31-12-2017T23:59:59:999. The to-field may be ommitted, meaning this value is valid for all time after the specified to-datetime.
Examples: The heat demand of a municipality in 2013 is 20 PJ. The range you define is then from 1-1-2013T to 1-1-2014T and the value 20 and ProfileType ENERGY_IN_PJ</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="from" type="ecore:EDate" use="required">
      <xsd:annotation>
        <xsd:documentation>including the value itself</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="to" type="ecore:EDate">
      <xsd:annotation>
        <xsd:documentation>exclusive the value itself</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:unsettable="false" name="value" type="ecore:EDouble" use="required"/>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="ExternalProfile">
    <xsd:annotation>
      <xsd:documentation>ExternalProfile allows to refer to an externally defined profile. Common uses are a profile defined in a (timeseries) database such as InfluxDB.
It allows you to specify a multiplier to scale the supplied external profile by a certain factor (e.g. when using NEDU profiles). Default the multiplier is '1'.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:GenericProfile">
        <xsd:attribute default="1.0" ecore:unsettable="false" name="multiplier" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>A multiplier can be used to scale the supplied external profile by a certain factor (e.g. when using NEDU profiles). Default the multiplier is '1'.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="startDate" type="ecore:EDate"/>
        <xsd:attribute name="endDate" type="ecore:EDate"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SingleValue">
    <xsd:annotation>
      <xsd:documentation>A profile used to define a single value. This should be used when no information is present about the time. E.g. the price of a PV panel as currently known
When a model queries for a value from a certain date (and to a certain date), that information will be ignored and it will always return this value.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:StaticProfile">
        <xsd:attribute ecore:unsettable="false" name="value" type="ecore:EDouble" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="GenericDistribution">
    <xsd:annotation>
      <xsd:documentation>Abstract class to represent different types of distributions</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="name" type="ecore:EString"/>
  </xsd:complexType>
  <xsd:complexType name="Percentile">
    <xsd:annotation>
      <xsd:documentation>Defines the percentile of a percentile distribution</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ecore:unsettable="false" name="percentile" type="ecore:EInt"/>
    <xsd:attribute ecore:unsettable="false" name="value" type="ecore:EDouble"/>
  </xsd:complexType>
  <xsd:complexType name="PercentileDistribution">
    <xsd:annotation>
      <xsd:documentation>Defines a distribution in terms of percentiles</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:GenericDistribution">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="percentile" type="esdl:Percentile"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CoolingDemand">
    <xsd:annotation>
      <xsd:documentation>Describes the cooling demand of e.g. a building</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Consumer">
        <xsd:attribute ecore:unsettable="false" name="deviceType" type="esdl:CoolingDeviceType"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Airco">
    <xsd:annotation>
      <xsd:documentation>Represents an air conditioning unit</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Conversion"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CostInformation">
    <xsd:annotation>
      <xsd:documentation>Describes the costs to acquire, install and maintain a certain asset.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="investmentCosts" type="esdl:GenericProfile"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="installationCosts" type="esdl:GenericProfile"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="fixedOperationalAndMaintenanceCosts" type="esdl:GenericProfile"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="marginalCosts" type="esdl:GenericProfile"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="variableOperationalAndMaintenanceCosts" type="esdl:GenericProfile"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="discountRate" type="esdl:GenericProfile"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="variableOperationalCosts" type="esdl:GenericProfile"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="fixedMaintenanceCosts" type="esdl:GenericProfile"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="fixedOperationalCosts" type="esdl:GenericProfile"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="variableMaintenanceCosts" type="esdl:GenericProfile"/>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Unique identifier for the CostInformation collection</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="SpecificLabelDistribution">
    <xsd:annotation>
      <xsd:documentation>Abstract class to define a distribution with labels</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:GenericDistribution"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="StringLabelDistribution">
    <xsd:annotation>
      <xsd:documentation>Defines a distribution in terms of self-defined labels</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:GenericLabelDistribution">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="stringItem" type="esdl:StringItem"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="EnergyLabelDistribution">
    <xsd:annotation>
      <xsd:documentation>Defines a distribution in terms of energy labels</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:SpecificLabelDistribution">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="labelPerc" type="esdl:EnergyLabelPerc"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="StringItem">
    <xsd:annotation>
      <xsd:documentation>Defines a label and a percentage, used in StringLabelDistribution</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="label" type="ecore:EString"/>
    <xsd:attribute default="0.0" ecore:unsettable="false" name="value" type="ecore:EDouble"/>
  </xsd:complexType>
  <xsd:complexType name="EnergyLabelPerc">
    <xsd:annotation>
      <xsd:documentation>Defines an energy label and a percentage, used in EnergyLabelDistribution</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ecore:unsettable="false" name="energyLabel" type="esdl:EnergyLabelEnum"/>
    <xsd:attribute ecore:unsettable="false" name="percentage" type="ecore:EDouble"/>
  </xsd:complexType>
  <xsd:complexType name="FromToDistribution">
    <xsd:annotation>
      <xsd:documentation>Defines a distribution in terms of 'from' and 'to'</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:GenericLabelDistribution">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="fromToItem" type="esdl:FromToItem"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="FromToItem">
    <xsd:annotation>
      <xsd:documentation>Defines a range and a percentage, used in the FromToDistribution class</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute default="0.0" ecore:unsettable="false" name="value" type="ecore:EDouble"/>
  </xsd:complexType>
  <xsd:complexType name="PItemStat">
    <xsd:annotation>
      <xsd:documentation>(experimental) Used to define statistical information</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ecore:unsettable="false" name="value" type="ecore:EDouble"/>
    <xsd:attribute ecore:unsettable="false" name="sigma" type="ecore:EDouble"/>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractVariance">
    <xsd:annotation>
      <xsd:documentation>(experimental) Used to define statistical information</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="SymmetricVariance">
    <xsd:annotation>
      <xsd:documentation>(experimental) Used to define statistical information</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractVariance">
        <xsd:attribute ecore:unsettable="false" name="sigma" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AssymmetricVariance">
    <xsd:annotation>
      <xsd:documentation>(experimental) Used to define statistical information</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractVariance">
        <xsd:attribute ecore:unsettable="false" name="sigmaMin" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="sigmaPlus" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DoubleAssymmetricVariance">
    <xsd:annotation>
      <xsd:documentation>(experimental) Used to define statistical information</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractVariance">
        <xsd:attribute ecore:unsettable="false" name="plus34perc" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="plus48perc" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="min34perc" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="min48perc" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="GeothermalSourceTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Type of geothermal source (heat / electricity)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="HEAT"/>
      <xsd:enumeration value="ELECTRICITY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CHPTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Type of CHP, such as STEG, Gas turbine or Gas motor</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="STEG"/>
      <xsd:enumeration value="GAS_TURBINE"/>
      <xsd:enumeration value="GAS_MOTOR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="CHP">
    <xsd:annotation>
      <xsd:documentation>Describes a Combined Heat and Power installation</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:CoGeneration">
        <xsd:attribute ecore:name="CHPType" ecore:unsettable="false" name="CHPType" type="esdl:CHPTypeEnum"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Party">
    <xsd:annotation>
      <xsd:documentation>Defines a stakeholder in the energy system, to represent ownership</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ecore:opposite="isOwnedBy" ecore:reference="esdl:Item" name="owns">
      <xsd:simpleType>
        <xsd:list itemType="xsd:anyURI"/>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString"/>
    <xsd:attribute name="name" type="ecore:EString"/>
    <xsd:attribute name="shortName" type="ecore:EString"/>
    <xsd:attribute ecore:opposite="isOwnedBy" ecore:reference="esdl:Area" name="ownsArea">
      <xsd:simpleType>
        <xsd:list itemType="xsd:anyURI"/>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute ecore:reference="esdl:Sector" name="sector" type="xsd:anyURI"/>
  </xsd:complexType>
  <xsd:complexType name="URIProfile">
    <xsd:annotation>
      <xsd:documentation>Describes a reference to a profile in an information system using a URI (e.g. a URI to a profile in Energy Information System (EIS))</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:ExternalProfile">
        <xsd:attribute ecore:name="URI" name="URI" type="ecore:EString"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="DatabaseProfile">
    <xsd:annotation>
      <xsd:documentation>Describes the fields of a generic database-based profile</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:ExternalProfile">
        <xsd:attribute name="host" type="ecore:EString"/>
        <xsd:attribute ecore:unsettable="false" name="port" type="ecore:EInt"/>
        <xsd:attribute name="database" type="ecore:EString"/>
        <xsd:attribute name="filters" type="ecore:EString">
          <xsd:annotation>
            <xsd:documentation>Raw string that can be communicated as the WHERE clause of the query</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="InfluxDBProfile">
    <xsd:annotation>
      <xsd:documentation>Describes a profile based on a measurement and field as part of an InfluxDB timeseries query</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:DatabaseProfile">
        <xsd:attribute name="measurement" type="ecore:EString"/>
        <xsd:attribute name="field" type="ecore:EString"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Line">
    <xsd:annotation>
      <xsd:documentation>Describes a line geometry based on a list of points, which can be used to define the shape of pipes and cables</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Geometry">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="2" name="point" type="esdl:Point"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="Geometry">
    <xsd:annotation>
      <xsd:documentation>Abstract class to define the shape/location of an asset or area. Parent class of e.g. Point, Line and Polygon</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ecore:name="CRS" name="CRS" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>The Coordinate Reference System, e.g. WGS-84 (GPS / lattitude, longitude), RD (EPSG:28992)</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:simpleType name="GlazingTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the type of glass used in a building, e.g. HR-glass. Defined in dutch</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="ENKEL_GLAS"/>
      <xsd:enumeration value="DUBBEL_GLAS"/>
      <xsd:enumeration value="HR_GLAS"/>
      <xsd:enumeration value="HRP_GLAS"/>
      <xsd:enumeration value="HRPP_GLAS"/>
      <xsd:enumeration value="HRPPP_GLAS"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="VentilationTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the ventilation type used in a building, such as mechanical or balanced ventilation</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="NATURAL"/>
      <xsd:enumeration value="MECHANIC_IN"/>
      <xsd:enumeration value="MECHANIC_OUT"/>
      <xsd:enumeration value="MECHANIC_INOUT"/>
      <xsd:enumeration value="BALANCED"/>
      <xsd:enumeration value="BALANCED_WITH_HEATRECUPERATION"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="GasHeaterTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Efficiency type of gas heater, such as HR100, HRE, etc.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="CR"/>
      <xsd:enumeration value="VR"/>
      <xsd:enumeration value="HR100"/>
      <xsd:enumeration value="HR104"/>
      <xsd:enumeration value="HR107"/>
      <xsd:enumeration value="HRE"/>
      <xsd:enumeration value="HRWW"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="InhabitantsTypeEnum">
    <xsd:annotation>
      <xsd:documentation>(experimental) Defines the composition of the household of a building unit in Dutch, e.g. Alleenstaand, Bejaard echtpaar</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="ALLEENSTAAND"/>
      <xsd:enumeration value="TWEEVERDIENERS"/>
      <xsd:enumeration value="GEZIN_MET_KINDEREN"/>
      <xsd:enumeration value="SENIOREN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AdditionalHeatingSourceTypeEnum">
    <xsd:annotation>
      <xsd:documentation>(experimetal) Used in defining a Hybrid Heat Pump if there are additional heating sources possible, but its usage is not modelled. Otherwise model a HeatPump and a GasHeater seperately</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NONE"/>
      <xsd:enumeration value="ELECTRIC"/>
      <xsd:enumeration value="GAS"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="GeothermalPotentialEnum">
    <xsd:annotation>
      <xsd:documentation>(experimental) Describes the chances of finding geothermal energy</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNKNOWN"/>
      <xsd:enumeration value="POSSIBLE"/>
      <xsd:enumeration value="GOOD"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="GeothermalPowerEnum">
    <xsd:annotation>
      <xsd:documentation>Describes the chances of finding geothermal energy including the expected thermal power</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNKNOWN"/>
      <xsd:enumeration value="POSSIBLE_GT5MWTH"/>
      <xsd:enumeration value="GOOD_GT5MWTH"/>
      <xsd:enumeration value="GOOD_GT7P5MWTH"/>
      <xsd:enumeration value="GOOD_GT10MWTH"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType abstract="true" name="Commodity">
    <xsd:annotation>
      <xsd:documentation>Abstract class for commodities</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Carrier"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GasCommodity">
    <xsd:annotation>
      <xsd:documentation>Defines a gas commodity. This class can be used as an abstract way of modelling gas commodity and can be used in conjunction with electricity commodity and heat commodity. If more detailed modelling is necessary, use energy carriers.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Commodity">
        <xsd:attribute ecore:unsettable="false" name="pressure" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The pressure of the gas commodity (in Pa)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="HeatCommodity">
    <xsd:annotation>
      <xsd:documentation>Defines a heat commodity</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Commodity">
        <xsd:attribute default="0.0" ecore:unsettable="false" name="supplyTemperature" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The supply temperature used in the heat system (in degrees Celcius)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="returnTemperature" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The return temperature used in the heat system (in degrees Celcius)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ElectricityCommodity">
    <xsd:annotation>
      <xsd:documentation>Defines an electricity commodity</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Commodity">
        <xsd:attribute ecore:unsettable="false" name="voltage" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The voltage of the electricity commodity (in Volt)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" ecore:interface="true" name="Carrier">
    <xsd:annotation>
      <xsd:documentation>Abstract class to define the carrier of energy, e.g. a energy carrier or a commodity (such as electricity)</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="cost" type="esdl:GenericProfile"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="dataSource" type="esdl:AbstractDataSource"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="ecore:EString"/>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString"/>
  </xsd:complexType>
  <xsd:complexType name="Range">
    <xsd:annotation>
      <xsd:documentation>Defines a range between two values</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:StaticProfile">
        <xsd:attribute ecore:unsettable="false" name="minValue" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="maxValue" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SolarPotential">
    <xsd:annotation>
      <xsd:documentation>Defines the potential for solar energy. This class can be used instead of 'SearchAreaSolar' in case there is more information available.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Potential">
        <xsd:attribute default="0.0" ecore:unsettable="false" name="value" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Can be used to express the amount of potential energy that can be harvested in this area. Attach a 'QuantityAndUnit' instance to express the unit of energy (e.g. ENERGY in GJ)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="UNDEFINED" ecore:unsettable="false" name="solarPotentialType" type="esdl:PVInstallationTypeEnum">
          <xsd:annotation>
            <xsd:documentation>Used to express the type of PV installation (e.g. ROOFTOP, FIELD, WATER, ROAD, ...).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="fullLoadHours" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>The number of hours which multiplied with the installed capacity will give the production during one year.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="area" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The calculated surface area for this potential (in square meters).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="angle" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>The tilt angle of the PV installation in degrees (e.g. 0 is flat, 90 is perpendicular to a horizontal surface).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="orientation" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>The orientation of the PV installation (south, north, west, east) in degrees.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Duration">
    <xsd:annotation>
      <xsd:documentation>Defines the duration of a profile query</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ecore:unsettable="false" name="value" type="ecore:ELong"/>
    <xsd:attribute default="SECOND" ecore:unsettable="false" name="durationUnit" type="esdl:DurationUnitEnum"/>
  </xsd:complexType>
  <xsd:complexType name="ProfileReference">
    <xsd:annotation>
      <xsd:documentation>Used to refer to profiles defined in the Energy System Information section</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:StaticProfile">
        <xsd:attribute default="1" ecore:unsettable="false" name="multiplier" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Allows to multiply the referred profile by a certain factor (e.g. when using normalized profiles)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:reference="esdl:GenericProfile" name="reference" type="xsd:anyURI" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Profiles">
    <xsd:annotation>
      <xsd:documentation>Container for profiles in the Energy System Information where other profiles can refer to</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="profile" type="esdl:GenericProfile"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Unique identifier for the Profiles collection</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="Parties">
    <xsd:annotation>
      <xsd:documentation>Container for parties that have a role in the energy system</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="party" type="esdl:Party"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DataSources">
    <xsd:annotation>
      <xsd:documentation>Collection of datasources used in the energy system</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="dataSource" type="esdl:DataSource"/>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString"/>
  </xsd:complexType>
  <xsd:complexType name="DataSource">
    <xsd:annotation>
      <xsd:documentation>A DataSource describes the source of the piece of information used in the energy system. E.g. a profile from NEDU or typical parameters of an Asset</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractDataSource">
        <xsd:attribute name="name" type="ecore:EString"/>
        <xsd:attribute name="description" type="ecore:EString"/>
        <xsd:attribute name="reference" type="ecore:EString"/>
        <xsd:attribute name="attribution" type="ecore:EString"/>
        <xsd:attribute name="releaseDate" type="ecore:EDate"/>
        <xsd:attribute name="version" type="ecore:EString"/>
        <xsd:attribute name="licence" type="ecore:EString"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="EnergyDemand">
    <xsd:annotation>
      <xsd:documentation>Allows to describe the total energy demand when differentiation between energy carriers is not possible or required, otherwise e.g. ElectricityDemand or HeatingDemand is an alternative</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Consumer"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SolarCollector">
    <xsd:annotation>
      <xsd:documentation>Defines a SolarCollector asset</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:HeatProducer">
        <xsd:attribute ecore:unsettable="false" name="type" type="esdl:SolarCollectorTypeEnum"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ResidualHeatSource">
    <xsd:annotation>
      <xsd:documentation>Defines a source of residual heat, e.g. a data center or factory</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:HeatProducer">
        <xsd:attribute ecore:unsettable="false" name="type" type="esdl:ResidualHeatSourceTypeEnum"/>
        <xsd:attribute ecore:opposite="residualHeatSource" ecore:reference="esdl:ResidualHeatSourcePotential" name="residualHeatSourcePotential" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="ResidualHeatSourceTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the types of residual heat sources</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="INDUSTRIAL"/>
      <xsd:enumeration value="DATACENTER"/>
      <xsd:enumeration value="COOLING_HOUSE"/>
      <xsd:enumeration value="OTHER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="FermentationPlant">
    <xsd:annotation>
      <xsd:documentation>Defines a plant fuelled by biomass</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Conversion"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ResidualHeatSourcePotential">
    <xsd:annotation>
      <xsd:documentation>Defines the residual heat potential in a specific area.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Potential">
        <xsd:attribute default="0.0" ecore:unsettable="false" name="value" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="type" type="esdl:ResidualHeatSourceTypeEnum"/>
        <xsd:attribute ecore:opposite="residualHeatSourcePotential" ecore:reference="esdl:Conversion" name="associatedConversionAsset" type="xsd:anyURI"/>
        <xsd:attribute ecore:opposite="residualHeatSourcePotential" ecore:reference="esdl:ResidualHeatSource" name="residualHeatSource" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SubPolygon">
    <xsd:annotation>
      <xsd:documentation>Part of a Polygon used to describe the internal or external boundary</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="3" name="point" type="esdl:Point"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MultiPolygon">
    <xsd:annotation>
      <xsd:documentation>Collection of Polygons</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Geometry">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" name="polygon" type="esdl:Polygon"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="EnergyCommodity">
    <xsd:annotation>
      <xsd:documentation>Generic energy commodity, to be used in (national) energy balances (when the type of energy is not important)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Commodity"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="MobilityDemand">
    <xsd:annotation>
      <xsd:documentation>Energy demand of the mobility sector. Allows to specify the vehicle types, fuel types and their efficiency and distance travelled</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Consumer">
        <xsd:sequence>
          <xsd:element ecore:unique="true" maxOccurs="unbounded" minOccurs="0" name="type" type="esdl:VehicleTypeEnum">
            <xsd:annotation>
              <xsd:documentation/>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute ecore:unsettable="false" name="fuelType" type="esdl:MobilityFuelTypeEnum"/>
        <xsd:attribute ecore:unsettable="false" name="distance" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>distance travelled in kilometers</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="efficiency" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="MobilityFuelTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Fuel type of the vehicle (category)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="PETROL"/>
      <xsd:enumeration value="DIESEL"/>
      <xsd:enumeration value="HYDROGEN"/>
      <xsd:enumeration value="LPG"/>
      <xsd:enumeration value="BIOFUEL"/>
      <xsd:enumeration value="ELECTRICITY"/>
      <xsd:enumeration value="OIL"/>
      <xsd:enumeration value="LNG"/>
      <xsd:enumeration value="KEROSENE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="VehicleTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Type of vehicle, e.g. car, truck, train</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="CAR"/>
      <xsd:enumeration value="TRUCK"/>
      <xsd:enumeration value="VAN"/>
      <xsd:enumeration value="BUS"/>
      <xsd:enumeration value="METRO"/>
      <xsd:enumeration value="TRAM"/>
      <xsd:enumeration value="TRAIN"/>
      <xsd:enumeration value="PASSENGER_TRAIN"/>
      <xsd:enumeration value="FREIGHT_TRAIN"/>
      <xsd:enumeration value="SCOOTER"/>
      <xsd:enumeration value="MOTOR_CYCLE"/>
      <xsd:enumeration value="NONROAD_VEHICLE"/>
      <xsd:enumeration value="AGRARIAN_VEHICLE"/>
      <xsd:enumeration value="BARGE"/>
      <xsd:enumeration value="INTERNATIONAL_SHIPPING"/>
      <xsd:enumeration value="AIRCRAFT"/>
      <xsd:enumeration value="OTHER"/>
      <xsd:enumeration value="TOTAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="MobilityFuelInformation">
    <xsd:annotation>
      <xsd:documentation>Collection of information about vehicles, fuels and efficiency</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="vehicleFuelEfficiency" type="esdl:VehicleFuelEfficiency"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="dataSource" type="esdl:AbstractDataSource"/>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString"/>
  </xsd:complexType>
  <xsd:complexType name="VehicleFuelEfficiency">
    <xsd:annotation>
      <xsd:documentation>Information about vehicles, fuels and efficiency, used in MobilityFuelInformation</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ecore:unsettable="false" name="vehicleType" type="esdl:VehicleTypeEnum"/>
    <xsd:attribute ecore:unsettable="false" name="fuel" type="esdl:MobilityFuelTypeEnum"/>
    <xsd:attribute ecore:unsettable="false" name="efficiency" type="ecore:EDouble">
      <xsd:annotation>
        <xsd:documentation/>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="MobilityProperties">
    <xsd:annotation>
      <xsd:documentation>(experimental) Can be used to define the mobility properties of an area</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="numberOfVehicles" type="esdl:NumberOfVehicles"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NumberOfVehicles">
    <xsd:annotation>
      <xsd:documentation>(experimental) Provides the ability to define the number of vehicles of an area</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="vehicleCount" type="esdl:VehicleCount"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="VehicleCount">
    <xsd:annotation>
      <xsd:documentation>(experimental) Defines the number of vehicles per vehicle type</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ecore:unsettable="false" name="type" type="esdl:VehicleTypeEnum"/>
    <xsd:attribute ecore:unsettable="false" name="count" type="ecore:EInt"/>
  </xsd:complexType>
  <xsd:complexType name="Electrolyzer">
    <xsd:annotation>
      <xsd:documentation>Defines an electrolyzer that converts electricity into hydrogen</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:PowerToX">
        <xsd:attribute ecore:unsettable="false" name="outputPressure" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="maxLoad" type="ecore:EInt"/>
        <xsd:attribute ecore:unsettable="false" name="minLoad" type="ecore:EInt"/>
        <xsd:attribute ecore:unsettable="false" name="effMaxLoad" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="effMinLoad" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GasStorage">
    <xsd:annotation>
      <xsd:documentation>Defines a gas storage asset, see also CCS</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Storage">
        <xsd:attribute ecore:unsettable="false" name="minStoragePressure" type="ecore:EDouble"/>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="maxStoragePressure" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Services">
    <xsd:annotation>
      <xsd:documentation>Defines a collection of logical services used in the energy system, e.g. Demand-Response, Aggregator services, Energy markets and control strategies.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="service" type="esdl:Service"/>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString"/>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="ControlStrategy">
    <xsd:annotation>
      <xsd:documentation>Defines a control strategy for a specific asset</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:EnergyService">
        <xsd:attribute ecore:opposite="controlStrategy" ecore:reference="esdl:EnergyAsset" name="energyAsset" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DrivenByDemand">
    <xsd:annotation>
      <xsd:documentation>Control strategy specifying that an asset is driven by the demand of one of the output ports</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:ControlStrategy">
        <xsd:attribute ecore:reference="esdl:OutPort" name="outPort" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="QuantityAndUnitType">
    <xsd:annotation>
      <xsd:documentation>Defines the quantity and its unit for a specific parameter. Used in e.g. profiles and KPIs. For example Energy in Joules or CO2 emission in kton.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractQuantityAndUnit">
        <xsd:attribute ecore:unsettable="false" name="physicalQuantity" type="esdl:PhysicalQuantityEnum"/>
        <xsd:attribute ecore:unsettable="false" name="multiplier" type="esdl:MultiplierEnum"/>
        <xsd:attribute ecore:unsettable="false" name="unit" type="esdl:UnitEnum"/>
        <xsd:attribute ecore:unsettable="false" name="perMultiplier" type="esdl:MultiplierEnum"/>
        <xsd:attribute ecore:unsettable="false" name="perUnit" type="esdl:UnitEnum"/>
        <xsd:attribute name="description" type="ecore:EString"/>
        <xsd:attribute ecore:unsettable="false" name="perTimeUnit" type="esdl:TimeUnitEnum"/>
        <xsd:attribute ecore:id="true" name="id" type="ecore:EString"/>
        <xsd:attribute ecore:unsettable="false" name="perScope" type="esdl:QuantityAndUnitScopeEnum"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="MultiplierEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the possible multipliers in QuantityAndUnitType</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NONE"/>
      <xsd:enumeration value="ATTO">
        <xsd:annotation>
          <xsd:documentation>10</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="FEMTO"/>
      <xsd:enumeration value="PICO"/>
      <xsd:enumeration value="NANO"/>
      <xsd:enumeration value="MICRO"/>
      <xsd:enumeration value="MILLI"/>
      <xsd:enumeration value="CENTI"/>
      <xsd:enumeration value="DECI"/>
      <xsd:enumeration value="DEKA"/>
      <xsd:enumeration value="HECTO"/>
      <xsd:enumeration value="KILO"/>
      <xsd:enumeration value="MEGA"/>
      <xsd:enumeration value="GIGA"/>
      <xsd:enumeration value="TERA"/>
      <xsd:enumeration value="TERRA">
        <xsd:annotation>
          <xsd:documentation>Decrepated (spelling mistake, still here for older models that use it)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PETA"/>
      <xsd:enumeration value="EXA"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PhysicalQuantityEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the possible physical quantities in QuantityAndUnitType</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="ENERGY"/>
      <xsd:enumeration value="POWER"/>
      <xsd:enumeration value="VOLTAGE"/>
      <xsd:enumeration value="PRESSURE"/>
      <xsd:enumeration value="TEMPERATURE"/>
      <xsd:enumeration value="EMISSION"/>
      <xsd:enumeration value="COST"/>
      <xsd:enumeration value="TIME"/>
      <xsd:enumeration value="LENGTH"/>
      <xsd:enumeration value="DISTANCE"/>
      <xsd:enumeration value="IRRADIANCE"/>
      <xsd:enumeration value="SPEED"/>
      <xsd:enumeration value="STATE_OF_CHARGE"/>
      <xsd:enumeration value="VOLUME"/>
      <xsd:enumeration value="AREA"/>
      <xsd:enumeration value="POWER_REACTIVE"/>
      <xsd:enumeration value="COMPOSITION"/>
      <xsd:enumeration value="FLOW"/>
      <xsd:enumeration value="STATE"/>
      <xsd:enumeration value="HEAD">
        <xsd:annotation>
          <xsd:documentation>e.g. pump head</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="POSITION"/>
      <xsd:enumeration value="COEFFICIENT"/>
      <xsd:enumeration value="WEIGHT"/>
      <xsd:enumeration value="FORCE"/>
      <xsd:enumeration value="CURRENT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UnitEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the possible units of a QuantityAndUnitType</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NONE"/>
      <xsd:enumeration value="JOULE"/>
      <xsd:enumeration value="WATTHOUR"/>
      <xsd:enumeration value="WATT"/>
      <xsd:enumeration value="VOLT"/>
      <xsd:enumeration value="BAR"/>
      <xsd:enumeration value="PSI"/>
      <xsd:enumeration value="DEGREES_CELSIUS"/>
      <xsd:enumeration value="KELVIN"/>
      <xsd:enumeration value="GRAM"/>
      <xsd:enumeration value="EURO"/>
      <xsd:enumeration value="DOLLAR"/>
      <xsd:enumeration value="SECOND"/>
      <xsd:enumeration value="MINUTE"/>
      <xsd:enumeration value="QUARTER"/>
      <xsd:enumeration value="HOUR"/>
      <xsd:enumeration value="DAY"/>
      <xsd:enumeration value="WEEK"/>
      <xsd:enumeration value="MONTH"/>
      <xsd:enumeration value="YEAR"/>
      <xsd:enumeration value="METRE"/>
      <xsd:enumeration value="SQUARE_METRE"/>
      <xsd:enumeration value="CUBIC_METRE"/>
      <xsd:enumeration value="LITRE"/>
      <xsd:enumeration value="WATTSECOND"/>
      <xsd:enumeration value="ARE"/>
      <xsd:enumeration value="HECTARE"/>
      <xsd:enumeration value="PERCENT"/>
      <xsd:enumeration value="VOLT_AMPERE"/>
      <xsd:enumeration value="VOLT_AMPERE_REACTIVE"/>
      <xsd:enumeration value="PASCAL"/>
      <xsd:enumeration value="NEWTON"/>
      <xsd:enumeration value="AMPERE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType abstract="true" name="AbstractDataSource">
    <xsd:annotation>
      <xsd:documentation>Abstract class to describe data sources or references to data sources</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString"/>
  </xsd:complexType>
  <xsd:complexType name="DataSourceReference">
    <xsd:annotation>
      <xsd:documentation>Defines a reference to a datasource, defined in the collection of DataSources (as part of the EnergySystemInformation)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractDataSource">
        <xsd:attribute ecore:reference="esdl:DataSource" name="reference" type="xsd:anyURI" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="TimeUnitEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the possible time units in a QuantityAndUnitType</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NONE"/>
      <xsd:enumeration value="SECOND"/>
      <xsd:enumeration value="MINUTE"/>
      <xsd:enumeration value="QUARTER"/>
      <xsd:enumeration value="HOUR"/>
      <xsd:enumeration value="DAY"/>
      <xsd:enumeration value="WEEK"/>
      <xsd:enumeration value="MONTH"/>
      <xsd:enumeration value="YEAR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="KPIs">
    <xsd:annotation>
      <xsd:documentation>Collection of key performance indicators of areas or assets</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="kpi" type="esdl:KPI"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="ecore:EString"/>
    <xsd:attribute name="description" type="ecore:EString"/>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="KPI">
    <xsd:annotation>
      <xsd:documentation>Defines a key performance indicator (KPI)</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="quantityAndUnit" type="esdl:AbstractQuantityAndUnit"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>The ID of this KPI.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="name" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>The name of the KPI.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="QuantityAndUnits">
    <xsd:annotation>
      <xsd:documentation>Collection of QuantityAndUnitTypes defined in the EnergySystemInformation section</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="quantityAndUnit" type="esdl:QuantityAndUnitType"/>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Unique identifier for the QuantityAndUnits collection</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractQuantityAndUnit">
    <xsd:annotation>
      <xsd:documentation>Abstract class to describe QuantityAndUnitTypes or references to these</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="QuantityAndUnitReference">
    <xsd:annotation>
      <xsd:documentation>Defines a reference to a QuantityAndUnitType defined in the collection of QuantityAndUnits (as part of the EnergySystemInformation)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractQuantityAndUnit">
        <xsd:attribute ecore:reference="esdl:QuantityAndUnitType" name="reference" type="xsd:anyURI" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="EnergyMarket">
    <xsd:annotation>
      <xsd:documentation>Defines an EnergyMarket of the energy system. A market is defined by specifying the assets that participate in this market.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:EnergyService">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="parameters" type="esdl:Parameters"/>
        </xsd:sequence>
        <xsd:attribute ecore:reference="esdl:Asset" name="asset">
          <xsd:simpleType>
            <xsd:list itemType="xsd:anyURI"/>
          </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute ecore:reference="esdl:Carrier" name="carrier" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GasConversion">
    <xsd:annotation>
      <xsd:documentation>Defines an asset that can convert gas into another form of gas. E.g. SMR or ATR.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Conversion">
        <xsd:attribute ecore:unsettable="false" name="type" type="esdl:GasConversionTypeEnum"/>
        <xsd:attribute ecore:unsettable="false" name="outputPressure" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="GasConversionTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Type of gas conversion, e.g. SMR or ATR</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="SMR"/>
      <xsd:enumeration value="ATR"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType abstract="true" name="Parameters">
    <xsd:annotation>
      <xsd:documentation>Used to describe properties of an EnergyMarket</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="parameterUnit" type="esdl:AbstractQuantityAndUnit"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="ecore:EString"/>
  </xsd:complexType>
  <xsd:complexType name="StringParameter">
    <xsd:annotation>
      <xsd:documentation>Defines a parameter of type String</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Parameters">
        <xsd:attribute name="value" type="ecore:EString"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DoubleParameter">
    <xsd:annotation>
      <xsd:documentation>Defines a parameter of type Double</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Parameters">
        <xsd:attribute ecore:unsettable="false" name="value" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="IntegerParameter">
    <xsd:annotation>
      <xsd:documentation>Defines a parameter of type Integer</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Parameters">
        <xsd:attribute ecore:unsettable="false" name="value" type="ecore:EInt"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BooleanParameter">
    <xsd:annotation>
      <xsd:documentation>Defines a parameter of type Boolean</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Parameters">
        <xsd:attribute ecore:unsettable="false" name="value" type="ecore:EBoolean"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DrivenBySupply">
    <xsd:annotation>
      <xsd:documentation>Control strategy specifying that an asset is driven by the supply of one of the input ports (used in ESDL-based simulation tools)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:ControlStrategy">
        <xsd:attribute ecore:reference="esdl:InPort" name="inPort" type="xsd:anyURI"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DrivenByProfile">
    <xsd:annotation>
      <xsd:documentation>Control strategy specifying that an asset is driven by a profile specified in one of the ports (used in ESDL-based simulation tools)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:ControlStrategy">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="profile" type="esdl:GenericProfile">
            <xsd:annotation>
              <xsd:documentation>the profile to use for the DrivenByProfile strategy. Depending on the purpose profiles can be power, energy, temperature, pressure, flow profiles (or any other type).</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute ecore:reference="esdl:Port" name="port" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>a reference to the port for which the profile is relevant</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="PVInstallation">
    <xsd:annotation>
      <xsd:documentation>Defines a Photo Voltaic Installation, e.g. roof top PV, a PV field or parc.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:PVPanel">
        <xsd:attribute ecore:unsettable="false" name="type" type="esdl:PVInstallationTypeEnum"/>
        <xsd:attribute ecore:unsettable="false" name="numberOfPanels" type="ecore:EInt"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="PVInstallationTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Type of PV installation, such as installed on roofs or as a field</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="ROOFTOP_PV"/>
      <xsd:enumeration value="BUILDING_INTEGRATED_PV"/>
      <xsd:enumeration value="WINDOW"/>
      <xsd:enumeration value="ROAD"/>
      <xsd:enumeration value="FIELD"/>
      <xsd:enumeration value="WATER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="WindTurbineTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Type of wind turbine. E.g. on land, at sea, on a building, etc.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="WIND_ON_LAND"/>
      <xsd:enumeration value="WIND_AT_SEA"/>
      <xsd:enumeration value="WIND_ON_COAST"/>
      <xsd:enumeration value="WIND_ON_BUILDING"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="CircuitBreaker">
    <xsd:annotation>
      <xsd:documentation>Defines a circuit breaker in electric transmission or distribution grids</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractPassiveSwitch"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Measure">
    <xsd:annotation>
      <xsd:documentation>A single measure or a combination of measures with collective cost information that can be applied to an energy system. An example of a measure-combination would be a combination of insulation and a heat pump.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractMeasure">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="asset" type="esdl:Asset">
            <xsd:annotation>
              <xsd:documentation>list of assets of which the measure consists</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="costInformation" type="esdl:CostInformation">
            <xsd:annotation>
              <xsd:documentation>Information about the costs of the measure. This involves the total costs, if required individual costs can be specified per asset </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="restriction" type="esdl:Restriction"/>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="labelJump" type="esdl:LabelJump">
            <xsd:annotation>
              <xsd:documentation>Specifies whether or not this measure includes a energy label jump</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute ecore:unsettable="false" name="type" type="esdl:MeasureTypeEnum"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="WaterToPower">
    <xsd:annotation>
      <xsd:documentation>Defines an asset that uses water to produce electricity. E.g.  hydro power, tidal power, wave power or osmotic power</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:ElectricityProducer">
        <xsd:attribute ecore:unsettable="false" name="type" type="esdl:WaterToPowerTypeEnum"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="WaterToPowerTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the different types of WaterToPower, such as hydro power, tidal power.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="HYDRO_POWER"/>
      <xsd:enumeration value="WAVE_POWER"/>
      <xsd:enumeration value="TIDAL_POWER"/>
      <xsd:enumeration value="OSMOTIC_POWER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="Sectors">
    <xsd:annotation>
      <xsd:documentation>Collection of sectors. Both Party and Item can link to a sector</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="sector" type="esdl:Sector"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="dataSource" type="esdl:AbstractDataSource"/>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString"/>
  </xsd:complexType>
  <xsd:complexType name="Sector">
    <xsd:annotation>
      <xsd:documentation>Defines a sector. Can be used for the Standaard Bedrijfsindeling (SBI) of the CBS in the Netherlands</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="dataSource" type="esdl:AbstractDataSource"/>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString"/>
    <xsd:attribute name="name" type="ecore:EString"/>
    <xsd:attribute name="description" type="ecore:EString"/>
    <xsd:attribute name="code" type="ecore:EString"/>
  </xsd:complexType>
  <xsd:complexType name="EnergyNetwork">
    <xsd:annotation>
      <xsd:documentation>Defines an energy network. Used for national energy balances, when the specific energy carrier is not required</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Transport"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractConductor">
    <xsd:annotation>
      <xsd:documentation>Abstract class to describe conductors such as cables and pipes and joining them using a joint</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Transport"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractSwitch">
    <xsd:annotation>
      <xsd:documentation>Abstract class to describe switches such as valve and a circuit breaker</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Transport"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractTransformer">
    <xsd:annotation>
      <xsd:documentation>Abstract class to describe transformers, such as Heat exchangers, transformers and pumps</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Transport"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractConnection">
    <xsd:annotation>
      <xsd:documentation>Abstract class to describe connections of a building to a grid. E.g. a heat connection, gas connection and electricity connection</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Transport"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="MultiLine">
    <xsd:annotation>
      <xsd:documentation>Defines a collection of lines</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Geometry">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" name="line" type="esdl:Line"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="SolarCollectorTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the types of solar collectors, such as roof top, building integrated.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="ROOFTOP"/>
      <xsd:enumeration value="BUILDING_INTEGRATED_SC"/>
      <xsd:enumeration value="ROAD"/>
      <xsd:enumeration value="FIELD"/>
      <xsd:enumeration value="WATER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HeatRadiationDeviceTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the types of heat radiation devices, such as high and low temperature radiators, floor heating, etc.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="HT_RADIATOR"/>
      <xsd:enumeration value="LT_RADIATOR"/>
      <xsd:enumeration value="FLOOR_HEATING"/>
      <xsd:enumeration value="WALL_HEATING"/>
      <xsd:enumeration value="INFRARED_PANEL"/>
      <xsd:enumeration value="AIR_HANDLING_UNIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CoolingDeviceType">
    <xsd:annotation>
      <xsd:documentation>Defines the types of cooling devices, such as floor cooling and air conditioning</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="FLOOR_COOLING"/>
      <xsd:enumeration value="AIR_HANDLING_UNIT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="GeothermalEnergyPotential">
    <xsd:annotation>
      <xsd:documentation>Defines the geothermal potential in a specific area. This type focusses on energy and depth of the well. See GeothermalPotental for class focussing on temperature</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractGTPotential">
        <xsd:attribute ecore:unsettable="false" name="depth" type="ecore:EInt"/>
        <xsd:attribute default="0.0" ecore:unsettable="false" name="value" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractGTPotential">
    <xsd:annotation>
      <xsd:documentation>Abstract class to describe geothermal potential</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Potential">
        <xsd:attribute ecore:opposite="geothermalPotential" ecore:reference="esdl:GeothermalSource" name="geothermalSource">
          <xsd:simpleType>
            <xsd:list itemType="xsd:anyURI"/>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="UTESPotential">
    <xsd:annotation>
      <xsd:documentation>Defines the potential for underground thermal energy storage (UTES). E.g. ATES or BTES potential</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Potential">
        <xsd:attribute ecore:unsettable="false" name="value" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="type" type="esdl:UTESPotentialTypeEnum"/>
        <xsd:attribute ecore:name="UTES" ecore:opposite="UTESPotential" ecore:reference="esdl:UTES" name="UTES">
          <xsd:simpleType>
            <xsd:list itemType="xsd:anyURI"/>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractInstanceDate">
    <xsd:annotation>
      <xsd:documentation>Abstract class to define the date or period of the validity of the data that is used in this instance </xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="InstanceDate">
    <xsd:annotation>
      <xsd:documentation>Describes the date of the validity of the data that is used in this instance </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractInstanceDate">
        <xsd:attribute name="date" type="ecore:EDate"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="InstancePeriod">
    <xsd:annotation>
      <xsd:documentation>Describes the period of the validity of the data that is used in this instance </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractInstanceDate">
        <xsd:attribute name="fromDate" type="ecore:EDate"/>
        <xsd:attribute name="toDate" type="ecore:EDate"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="RoomHeater">
    <xsd:annotation>
      <xsd:documentation>Defines an asset for heating rooms, such as infra red panels, gas stove, etc.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Conversion">
        <xsd:attribute ecore:unsettable="false" name="type" type="esdl:RoomHeaterTypeEnum"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="RoomHeaterTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the types of a RoomHeater</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="GAS_STOVE"/>
      <xsd:enumeration value="WOOD_STOVE"/>
      <xsd:enumeration value="ELECTRIC"/>
      <xsd:enumeration value="INFRARED_PANEL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="BiomassPotential">
    <xsd:annotation>
      <xsd:documentation>Defines the biomass potential in a specific area.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Potential">
        <xsd:attribute default="0.0" ecore:unsettable="false" name="value" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The amount of biomass in Joule</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BiomassHeater">
    <xsd:annotation>
      <xsd:documentation>Converts biomass into heat and/or electricity</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Conversion"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="BiomassHeaterTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Specifies the type of the BiomassHeater, such as CHP</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="FULLY_AUTOMATED"/>
      <xsd:enumeration value="SEMI_AUTOMATED"/>
      <xsd:enumeration value="PELLET_FIRED"/>
      <xsd:enumeration value="CHP"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UTESPotentialTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the type of the UTES potential, such as an open source for heat or cold.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="HEAT_OPEN"/>
      <xsd:enumeration value="HEAT_CLOSED"/>
      <xsd:enumeration value="COLD_OPEN"/>
      <xsd:enumeration value="COLD_CLOSED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="UTES">
    <xsd:annotation>
      <xsd:documentation>Underground Thermal Energy Storage</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:HeatStorage">
        <xsd:attribute default="UNDEFINED" ecore:unsettable="false" name="type" type="esdl:UTESTypeEnum">
          <xsd:annotation>
            <xsd:documentation>Specifies the type of the UTES, e.g. ATES (Aquifer), BTES (Borehole) and CTES (Cavern)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:name="UTESPotential" ecore:opposite="UTES" ecore:reference="esdl:UTESPotential" name="UTESPotential" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>Reference to the potential area for this UTES</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="WaterBuffer">
    <xsd:annotation>
      <xsd:documentation>Storage by means of storing energy in water, e.g. a tank.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:HeatStorage"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="UTESTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the different types of UTES, e.g. ATES (Aquifer), BTES (Borehole) and CTES (Cavern)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="AQUIFER_TES"/>
      <xsd:enumeration value="BOREHOLE_TES"/>
      <xsd:enumeration value="CAVERN_TES"/>
      <xsd:enumeration value="OTHER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="Glazing">
    <xsd:annotation>
      <xsd:documentation>Allows to specify the glass of a building, e.g. for calculating heat loss</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Asset">
        <xsd:attribute ecore:unsettable="false" name="uWindow" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The u-value of the window (thermal isolation) in W/m2.K</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="UNDEFINED" ecore:unsettable="false" name="glazingType" type="esdl:GlazingTypeEnum">
          <xsd:annotation>
            <xsd:documentation>Enumeration of different types of glass, such as HR++</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="InterpolationMethodEnum">
    <xsd:annotation>
      <xsd:documentation>Type of interpolation between elements in the profile. See https://docs.scipy.org/doc/scipy/reference/tutorial/interpolate.html for additional documentation and figures</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="NONE"/>
      <xsd:enumeration value="LINEAR"/>
      <xsd:enumeration value="CUBIC"/>
      <xsd:enumeration value="NEAREST"/>
      <xsd:enumeration value="PREVIOUS"/>
      <xsd:enumeration value="NEXT"/>
      <xsd:enumeration value="OTHER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="WKT">
    <xsd:annotation>
      <xsd:documentation>Well-Known Text (see https://en.wikipedia.org/wiki/Well-known_text)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Geometry">
        <xsd:attribute name="value" type="ecore:EString"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="WKB">
    <xsd:annotation>
      <xsd:documentation>Well-Known Binary (See https://en.wikipedia.org/wiki/Well-known_text#Well-known_binary)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Geometry">
        <xsd:attribute name="value" type="ecore:EString">
          <xsd:annotation>
            <xsd:documentation>Base64 encoded WKB value</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SearchAreaWind">
    <xsd:annotation>
      <xsd:documentation>Specifies search areas for wind turbines. Search areas are a kind of 'legal' areas that have been appointed by the (local) government as possible areas for wind installations. Further research should give insight in the real potential (in terms of energy).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Potential">
        <xsd:attribute ecore:unsettable="false" name="fullLoadHours" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>Specifies expected full load hours in this search area</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="area" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The calculated surface area for this search area (in square meters).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="height" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The height of the windturbines for which this potential is calculated.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SearchAreaSolar">
    <xsd:annotation>
      <xsd:documentation>Specifies search areas for solar installations. Search areas are a kind of 'legal' areas that have been appointed by the (local) government as possible areas for solar installations. Further research should give insight in the real potential (in terms of energy).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Potential">
        <xsd:attribute ecore:unsettable="false" name="fullLoadHours" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>Specifies expected full load hours in this search area</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="area" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The calculated surface area for this search area (in square meters).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Joint">
    <xsd:annotation>
      <xsd:documentation>A Joint is a means to connect AbstractConductors, such as Pipes and ElectricalCables. This helps when these conductors have opposite Ports.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractConductor"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="StorageStrategy">
    <xsd:annotation>
      <xsd:documentation>Control strategy specifying that a storage asset is driven by two profiles specifying the marginal cost to define its charging and discharging behavior (used in ESDL-based simulation tools)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:ControlStrategy">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="marginalChargeCosts" type="esdl:GenericProfile"/>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="marginalDischargeCosts" type="esdl:GenericProfile"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CurtailmentStrategy">
    <xsd:annotation>
      <xsd:documentation>Control strategy that specifies a max power at which the production is curtailed</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:ControlStrategy">
        <xsd:attribute ecore:unsettable="false" name="maxPower" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>in Watt</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="PVTInstallation">
    <xsd:annotation>
      <xsd:documentation>Defines an installation that combines PV and thermal energy collection</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Producer">
        <xsd:attribute default="UNDEFINED" ecore:unsettable="false" name="type" type="esdl:SolarCollectorTypeEnum"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BuildingUsage">
    <xsd:annotation>
      <xsd:documentation>Collection of information about the usage of a building, such as temperature set points and opening hours.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractBuildingUsage">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="coolingSetpoints" type="esdl:WeekSchedule">
            <xsd:annotation>
              <xsd:documentation>Specifies the week schedule for cooling</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="heatingSetpoints" type="esdl:WeekSchedule">
            <xsd:annotation>
              <xsd:documentation>Specifies the week schedule for heating</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="openingHours" type="esdl:WeekSchedule">
            <xsd:annotation>
              <xsd:documentation>Specifies the week schedule for opening hours</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute ecore:id="true" name="id" type="ecore:EString"/>
        <xsd:attribute name="name" type="ecore:EString">
          <xsd:annotation>
            <xsd:documentation>Name of the usage</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="WeekSchedule">
    <xsd:annotation>
      <xsd:documentation>Specifies a week schedule for building usage</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="mon" type="esdl:DaySchedule">
        <xsd:annotation>
          <xsd:documentation>Specifies a day schedule</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="tue" type="esdl:DaySchedule">
        <xsd:annotation>
          <xsd:documentation>Specifies a day schedule</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="wed" type="esdl:DaySchedule">
        <xsd:annotation>
          <xsd:documentation>Specifies a day schedule</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="thu" type="esdl:DaySchedule">
        <xsd:annotation>
          <xsd:documentation>Specifies a day schedule</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="fri" type="esdl:DaySchedule">
        <xsd:annotation>
          <xsd:documentation>Specifies a day schedule</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="sat" type="esdl:DaySchedule">
        <xsd:annotation>
          <xsd:documentation>Specifies a day schedule</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="sun" type="esdl:DaySchedule">
        <xsd:annotation>
          <xsd:documentation>Specifies a day schedule</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="weekdays" type="esdl:DaySchedule">
        <xsd:annotation>
          <xsd:documentation>Specifies a day schedule</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="weekenddays" type="esdl:DaySchedule">
        <xsd:annotation>
          <xsd:documentation>Specifies a day schedule</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DaySchedule">
    <xsd:annotation>
      <xsd:documentation>Specifies a day schedule as part of a week schedule. A day schedule is a collection of events with a timestamp</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="event" type="esdl:Event">
        <xsd:annotation>
          <xsd:documentation>Collection of events with a timestamp</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Event">
    <xsd:annotation>
      <xsd:documentation>Event with a timestamp</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="id" type="ecore:EString"/>
    <xsd:attribute name="time" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Time at which the event occurs, e.g. 10:00</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="description" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Description of the event</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:unsettable="false" name="value" type="ecore:EDouble">
      <xsd:annotation>
        <xsd:documentation>Specifies a value in an event, such as a setpoint temperature, on/off, etc.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractBuildingUsage">
    <xsd:annotation>
      <xsd:documentation>Abstract class to support references to building usages</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="BuildingUsageReference">
    <xsd:annotation>
      <xsd:documentation>Specifies a reference to building usage (such as opening hours)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractBuildingUsage">
        <xsd:attribute ecore:reference="esdl:BuildingUsage" name="reference" type="xsd:anyURI" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BuildingUsageInformation">
    <xsd:annotation>
      <xsd:documentation>Part of Energy System Information that specifies generic building usage information that can be referenced from multiple individual buildings</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="buildingUsage" type="esdl:BuildingUsage">
        <xsd:annotation>
          <xsd:documentation>A reference to building usage of a building</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString"/>
  </xsd:complexType>
  <xsd:complexType name="BuildingTypeDistribution">
    <xsd:annotation>
      <xsd:documentation>Specifies the way the building type is distributed in this area (e.g. Utility, Residential), specifing the percentage of buildings per type.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:SpecificLabelDistribution">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="buildingTypePercentage" type="esdl:BuildingTypePercentage">
            <xsd:annotation>
              <xsd:documentation>The distribution in percentages</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BuildingTypePercentage">
    <xsd:annotation>
      <xsd:documentation>Specifies the percentage of the selected building type</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ecore:unsettable="false" name="buildingType" type="esdl:BuildingTypeEnum"/>
    <xsd:attribute ecore:unsettable="false" name="percentage" type="ecore:EDouble"/>
  </xsd:complexType>
  <xsd:complexType name="ResidentialBuildingTypeDistribution">
    <xsd:annotation>
      <xsd:documentation>Specifies the way the residential building type is distributed in this area (e.g. Vrijstaande Woning, Hoekwoning, Flatwoning), specifing the percentage of buildings per residential type.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:SpecificLabelDistribution">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="residentialBuildingTypePercentage" type="esdl:ResidentialBuildingTypePercentage">
            <xsd:annotation>
              <xsd:documentation>The distribution in percentages</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ResidentialBuildingTypePercentage">
    <xsd:annotation>
      <xsd:documentation>Specifies the percentage of the selected residential building type</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ecore:unsettable="false" name="residentialBuildingType" type="esdl:ResidentialBuildingTypeEnum">
      <xsd:annotation>
        <xsd:documentation/>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:unsettable="false" name="percentage" type="ecore:EDouble"/>
  </xsd:complexType>
  <xsd:complexType name="OwnershipRentalTypeDistribution">
    <xsd:annotation>
      <xsd:documentation>Specifies the way the housing type is distributed in this area (e.g. Owner occupied, Housing Association, Private Rental), specifing the percentage of buildings per housing type.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:SpecificLabelDistribution">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="ownershipRentalTypePercentage" type="esdl:OwnershipRentalTypePercentage">
            <xsd:annotation>
              <xsd:documentation>The distribution in percentages</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="OwnershipRentalTypePercentage">
    <xsd:annotation>
      <xsd:documentation>Specifies the percentage of the selected housing type</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute default="UNDEFINED" ecore:unsettable="false" name="ownershipRentalType" type="esdl:OwnershipRentalTypeEnum"/>
    <xsd:attribute ecore:unsettable="false" name="percentage" type="ecore:EDouble"/>
  </xsd:complexType>
  <xsd:complexType name="DoubleKPI">
    <xsd:annotation>
      <xsd:documentation>Specifies a KPI value as a double</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:KPI">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="target" type="esdl:DoubleTargetKPI">
            <xsd:annotation>
              <xsd:documentation>Allows to define ambitions for this KPI for several years in the future.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute ecore:unsettable="false" name="value" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The current value of this KPI.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="StringKPI">
    <xsd:annotation>
      <xsd:documentation>Specifies a KPI value as a string</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:KPI">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="target" type="esdl:StringTargetKPI">
            <xsd:annotation>
              <xsd:documentation>Allows to define ambitions for this KPI for several years in the future.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="value" type="ecore:EString">
          <xsd:annotation>
            <xsd:documentation>The current value of this KPI.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="IntKPI">
    <xsd:annotation>
      <xsd:documentation>Specifies a KPI value as an integer</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:KPI">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="target" type="esdl:IntTargetKPI">
            <xsd:annotation>
              <xsd:documentation>Allows to define ambitions for this KPI for several years in the future.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute ecore:unsettable="false" name="value" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>The current value of this KPI.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="FromToIntItem">
    <xsd:annotation>
      <xsd:documentation>Specifies a percentage range as an integer value, as part of a distribution, e.g. for defining a period of years (1945-1960) in Aggregated Buildings</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:FromToItem">
        <xsd:attribute ecore:unsettable="false" name="from" type="ecore:EInt"/>
        <xsd:attribute ecore:unsettable="false" name="to" type="ecore:EInt"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="FromToDoubleItem">
    <xsd:annotation>
      <xsd:documentation>Specifies a percentage range as an double value, as part of a distribution, e.g. for defining energy usage (2.5-5.0 GJ of hot tap water) in Aggregated Buildings</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:FromToItem">
        <xsd:attribute ecore:unsettable="false" name="from" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="to" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="Matter">
    <xsd:annotation>
      <xsd:documentation>Abstract class for describing matters. There are three subclasses:

- Material: for the materials of which Assets are made, but also for raw materials (e.g. water as an input for an electrolyzer)
- Fuels: for decomposing EnergyCarriers
- CompoundMatter for creating a mixture or a collection of Materials or Fuels</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractMatter">
        <xsd:attribute ecore:unsettable="false" name="density" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Density of the matter in kg/m3 (kilogram per cubic meter)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="stateOfMatter" type="esdl:StateOfMatterEnum"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="PipeDiameterEnum">
    <xsd:annotation>
      <xsd:documentation>Defines the pipe diameter in DN size. When this field is set to VALUE_SPECIFIED	 (default) both innerDiameter and outerDiameter fields are used for diameter specification. If not, an appropriate pipe catalog should be used to calculate the properties of the pipe, based on the speficied DN size. This allows for different pipe types, e.g. with or without insulation.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VALUE_SPECIFIED">
        <xsd:annotation>
          <xsd:documentation>Default option for this Pipe diameter: it specifies that the innerDiameter and outerDiamter fields are used instead of values from this enumeration.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration ecore:value="6" value="DN6"/>
      <xsd:enumeration ecore:value="8" value="DN8"/>
      <xsd:enumeration ecore:value="10" value="DN10"/>
      <xsd:enumeration ecore:value="15" value="DN15"/>
      <xsd:enumeration ecore:value="20" value="DN20"/>
      <xsd:enumeration ecore:value="25" value="DN25"/>
      <xsd:enumeration ecore:value="32" value="DN32"/>
      <xsd:enumeration ecore:value="40" value="DN40"/>
      <xsd:enumeration ecore:value="50" value="DN50"/>
      <xsd:enumeration ecore:value="65" value="DN65"/>
      <xsd:enumeration ecore:value="80" value="DN80"/>
      <xsd:enumeration ecore:value="100" value="DN100"/>
      <xsd:enumeration ecore:value="125" value="DN125"/>
      <xsd:enumeration ecore:value="150" value="DN150"/>
      <xsd:enumeration ecore:value="200" value="DN200"/>
      <xsd:enumeration ecore:value="250" value="DN250"/>
      <xsd:enumeration ecore:value="300" value="DN300"/>
      <xsd:enumeration ecore:value="350" value="DN350"/>
      <xsd:enumeration ecore:value="400" value="DN400"/>
      <xsd:enumeration ecore:value="450" value="DN450"/>
      <xsd:enumeration ecore:value="500" value="DN500"/>
      <xsd:enumeration ecore:value="600" value="DN600"/>
      <xsd:enumeration ecore:value="650" value="DN650"/>
      <xsd:enumeration ecore:value="700" value="DN700"/>
      <xsd:enumeration ecore:value="800" value="DN800"/>
      <xsd:enumeration ecore:value="900" value="DN900"/>
      <xsd:enumeration ecore:value="1000" value="DN1000"/>
      <xsd:enumeration ecore:value="1100" value="DN1100"/>
      <xsd:enumeration ecore:value="1200" value="DN1200"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="Bus">
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractConductor">
        <xsd:attribute ecore:unsettable="false" name="voltage" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractSensor">
    <xsd:complexContent>
      <xsd:extension base="esdl:Transport"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Sensor">
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractSensor">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" name="quantityAndUnit" type="esdl:AbstractQuantityAndUnit"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Switch">
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractActiveSwitch"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Compressor">
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractTransformer"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="PressureReducingValve">
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractTransformer">
        <xsd:attribute default="0.0" ecore:unsettable="false" name="valveCoefficient" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The valve coefficient of a valve describes the relationship between the pressure drop across the valve and the corresponding flow rate</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CompoundMatter">
    <xsd:annotation>
      <xsd:documentation>Composition of different Matters, either mixed (mix of gasses or liquids) or layered.

Examples of layered Matters
- a construction of a wall, roof, or floor with isolation
- double or triple glazing consisting of multiple layers
- a heatnetwork pipe or electrical cable consisting of multiple layers</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Matter">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="component" type="esdl:CompoundMatterComponent"/>
        </xsd:sequence>
        <xsd:attribute ecore:unsettable="false" name="compoundType" type="esdl:CompoundTypeEnum">
          <xsd:annotation>
            <xsd:documentation>Describes w</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CompoundMatterComponent">
    <xsd:annotation>
      <xsd:documentation>One of the components of a CompoundMatter instance</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" name="matter" type="esdl:AbstractMatter"/>
    </xsd:sequence>
    <xsd:attribute default="0.0" ecore:unsettable="false" name="mixFraction" type="ecore:EDouble">
      <xsd:annotation>
        <xsd:documentation>In case of a mix of matters, the mixFraction allows to describe the percentage of this fraction in the total mix</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:unsettable="false" name="layerWidth" type="ecore:EDouble">
      <xsd:annotation>
        <xsd:documentation>In case of a collection of layers of matters, the layerWidth allows to describe the width of this layer of matter in the total collection</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="PIDController">
    <xsd:annotation>
      <xsd:documentation>Control strategy specifying that an asset is driven by a PID controller (used in ESDL-based simulation tools)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:ControlStrategy">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" name="setPoint" type="esdl:GenericProfile">
            <xsd:annotation>
              <xsd:documentation>Desired setpoint of the measured process variable. The PID controller tries to minimize the error between the setPoint and the measured process variable.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute ecore:name="Kp" ecore:unsettable="false" name="Kp" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Proportional gain of the PID controller</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:name="Ki" ecore:unsettable="false" name="Ki" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Integral gain of the PID controller</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:name="Kd" ecore:unsettable="false" name="Kd" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Derivative gain of the PID controller</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:reference="esdl:Sensor" name="sensor" type="xsd:anyURI" use="required">
          <xsd:annotation>
            <xsd:documentation>Sensor used to measure the process variable. The PID controller tries to minimize the error between the setPoint and the measured process variable.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="PVPark">
    <xsd:annotation>
      <xsd:documentation>Defines a PV park of multiple panels</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:PVPanel">
        <xsd:attribute ecore:unsettable="false" name="numberOfPanels" type="ecore:EInt"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="WindPark">
    <xsd:annotation>
      <xsd:documentation>Defines a wind park of multiple turbines</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:WindTurbine">
        <xsd:attribute ecore:unsettable="false" name="numberOfTurbines" type="ecore:EInt"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="IntTargetKPI">
    <xsd:attribute ecore:unsettable="false" name="value" type="ecore:EInt">
      <xsd:annotation>
        <xsd:documentation>The value of the ambition for this KPI for the specified year</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:unsettable="false" name="year" type="ecore:EInt">
      <xsd:annotation>
        <xsd:documentation>The year for which this ambition is specified.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="DoubleTargetKPI">
    <xsd:attribute ecore:unsettable="false" name="value" type="ecore:EDouble">
      <xsd:annotation>
        <xsd:documentation>The value of the ambition for this KPI for the specified year</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:unsettable="false" name="year" type="ecore:EInt">
      <xsd:annotation>
        <xsd:documentation>The year for which this ambition is specified.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="StringTargetKPI">
    <xsd:attribute name="value" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>The value of the ambition for this KPI for the specified year</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:unsettable="false" name="year" type="ecore:EInt">
      <xsd:annotation>
        <xsd:documentation>The year for which this ambition is specified.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:simpleType name="AssetStateEnum">
    <xsd:annotation>
      <xsd:documentation>The AssetStateEnum allows to specify the 'state' of an Asset, mainly used for manually simulating different scenarios. It can be used to temporarily disable an Asset for a specific simulation, without the need to remove the Asset and loose all its parameter configurations. By default the value is 'ENABLED'. 'DISABLED' can be used to disable an Asset temporarily, 'OPTINAL' can be used to specify to a simulator that the Asset can optionally be placed here (to be decided by the simulator, algorithm or tool). </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ENABLED">
        <xsd:annotation>
          <xsd:documentation>Asset is enabled (the default)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="DISABLED">
        <xsd:annotation>
          <xsd:documentation>Asset is disabled (temporarily)</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="OPTIONAL">
        <xsd:annotation>
          <xsd:documentation>Asset is optional, to be decided in a later stage if the asset will be removed or will get an 'ENABLED' (or 'DISABLED') state.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType abstract="true" name="Restriction">
    <xsd:complexContent>
      <xsd:extension base="esdl:Item"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BuildingTypeRestriction">
    <xsd:complexContent>
      <xsd:extension base="esdl:Restriction">
        <xsd:sequence>
          <xsd:element ecore:unique="true" maxOccurs="unbounded" minOccurs="0" name="type" type="esdl:BuildingTypeEnum"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AreaTypeRestriction">
    <xsd:complexContent>
      <xsd:extension base="esdl:Restriction">
        <xsd:sequence>
          <xsd:element ecore:unique="true" maxOccurs="unbounded" minOccurs="0" name="type" type="esdl:AreaTypeEnum"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Templates">
    <xsd:annotation>
      <xsd:documentation>Collection of templates, e.g. asset templates.
</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="assetTemplate" type="esdl:AssetTemplate"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AssetTemplate">
    <xsd:annotation>
      <xsd:documentation>Template for an asset. Can be used to specify a generic asset type where specific instances can refer to and inherit properties of.
</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Item">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" name="asset" type="esdl:Asset"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="TemplatedAsset">
    <xsd:annotation>
      <xsd:documentation>An instantiated asset that is referring to an asset template and the specific asset. The asset template contains generic information, the specific asset contains specific information about this instance (e.g. geometry).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Asset">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="asset" type="esdl:Asset"/>
        </xsd:sequence>
        <xsd:attribute ecore:reference="esdl:AssetTemplate" name="template" type="xsd:anyURI" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Address">
    <xsd:annotation>
      <xsd:documentation>The address of a building unit.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="streetName" type="ecore:EString"/>
    <xsd:attribute ecore:unsettable="false" name="houseNumber" type="ecore:EInt"/>
    <xsd:attribute name="houseNumberLetter" type="ecore:EString"/>
    <xsd:attribute name="houseNumberAnnex" type="ecore:EString"/>
    <xsd:attribute name="postalCode" type="ecore:EString"/>
    <xsd:attribute name="city" type="ecore:EString"/>
    <xsd:attribute name="stateOrProvince" type="ecore:EString"/>
    <xsd:attribute name="country" type="ecore:EString"/>
  </xsd:complexType>
  <xsd:simpleType name="QuantityAndUnitScopeEnum">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="CONNECTION"/>
      <xsd:enumeration value="BUILDING"/>
      <xsd:enumeration value="HOUSEHOLD"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType abstract="true" name="GenericLabelDistribution">
    <xsd:complexContent>
      <xsd:extension base="esdl:GenericDistribution"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DistributionKPI">
    <xsd:complexContent>
      <xsd:extension base="esdl:KPI">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="distribution" type="esdl:GenericLabelDistribution"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SinkConsumer">
    <xsd:annotation>
      <xsd:documentation>(Deprecated, will be removed in future ESDL versions) Represents a consumer that consumes exported energy from the current energy system. Used to model the rest of the energy system that is out of the current scope</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Consumer"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SourceProducer">
    <xsd:annotation>
      <xsd:documentation>(Deprecated, will be removed in future ESDL versions) Represents a source that delivers imported energy into the current energy system. Used to model the rest of the energy system that is out of the current scope</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Producer"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="MinimumLabelRestriction">
    <xsd:complexContent>
      <xsd:extension base="esdl:Restriction">
        <xsd:attribute ecore:unsettable="false" name="label" type="esdl:EnergyLabelEnum"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="LabelJump">
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="buildingYearRange" type="esdl:Range"/>
    </xsd:sequence>
    <xsd:attribute ecore:unsettable="false" name="fromLabel" type="esdl:EnergyLabelEnum"/>
    <xsd:attribute ecore:unsettable="false" name="toLabel" type="esdl:EnergyLabelEnum"/>
    <xsd:attribute ecore:unsettable="false" name="buildingType" type="esdl:ResidentialBuildingTypeEnum"/>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractMeasure">
    <xsd:complexContent>
      <xsd:extension base="esdl:Item"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="MeasureReference">
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractMeasure">
        <xsd:attribute ecore:reference="esdl:Measure" name="reference" type="xsd:anyURI" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Building">
    <xsd:annotation>
      <xsd:documentation>Represents a physical building</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:GenericBuilding"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="BuildingInformation">
    <xsd:annotation>
      <xsd:documentation>Super class of all different kinds of extra information that can be specified for a building</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="ResidentialBuildingInformation">
    <xsd:annotation>
      <xsd:documentation>Class that contains extra information that can be specified for a residential building</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:BuildingInformation">
        <xsd:attribute ecore:unsettable="false" name="numberOfInhabitants" type="ecore:EInt"/>
        <xsd:attribute default="UNDEFINED" ecore:unsettable="false" name="inhabitantsType" type="esdl:InhabitantsTypeEnum"/>
        <xsd:attribute default="UNDEFINED" ecore:unsettable="false" name="residentialBuildingType" type="esdl:ResidentialBuildingTypeEnum"/>
        <xsd:attribute default="UNDEFINED" ecore:unsettable="false" name="ownershipRentalType" type="esdl:OwnershipRentalTypeEnum"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BuildingStructureInformation">
    <xsd:complexContent>
      <xsd:extension base="esdl:BuildingInformation">
        <xsd:attribute ecore:unsettable="false" name="slantedRoofArea" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>in m2</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="wallArea" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>in m2</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="roofType" type="esdl:RoofTypeEnum">
          <xsd:annotation>
            <xsd:documentation>Flat roof, slanted roof, or combination</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="flatRoofArea" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>in m2</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="windowArea" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>in m2</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="glassType" type="esdl:GlazingTypeEnum">
          <xsd:annotation>
            <xsd:documentation>e.g. HR++ glass</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="height" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>in m</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="orientation" type="ecore:EInt">
          <xsd:annotation>
            <xsd:documentation>(experimental, no usage yet) in degrees</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="rcWall" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>in m2K/W</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="rcRoof" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>in m2K/W</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="ventilationType" type="esdl:VentilationTypeEnum">
          <xsd:annotation>
            <xsd:documentation>Type of ventilation used in building, e.g. mechanical ventilation</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="rcFloor" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>in m2K/W</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="uWindow" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>in W/m2K</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="perimeter" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>in m</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CompoundAsset">
    <xsd:complexContent>
      <xsd:extension base="esdl:Asset">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="asset" type="esdl:Asset"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="InitialValue">
    <xsd:annotation>
      <xsd:documentation>Can be used to explicitely set an initial value of a certain parameter. Used as input for simulation models that calculate this parameter over time, but need a value to initialize the model.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:StaticProfile">
        <xsd:attribute ecore:unsettable="false" name="value" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The initial value</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Table">
    <xsd:annotation>
      <xsd:documentation>Table class that represents data in a table structure. Current examples are the pump curve table and a table describing the flowCoefficient of a checkvalve (relation between pressure drop and flow rate)</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="row" type="esdl:TableRow"/>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="header" type="esdl:AbstractQuantityAndUnit"/>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="datasource" type="esdl:AbstractDataSource">
        <xsd:annotation>
          <xsd:documentation>Reference to a datasource describing where the data in the table comes from</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="name" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Name of the table</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="description" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Description of the table</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="TableRow">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="value" type="ecore:EDouble"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="ValveTypeEnum">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="BUTTERFLY"/>
      <xsd:enumeration value="BALL"/>
      <xsd:enumeration value="GATE"/>
      <xsd:enumeration value="GATE_VALVE_SQUARE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType abstract="true" name="AbstractActiveSwitch">
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractSwitch">
        <xsd:attribute ecore:unsettable="false" name="position" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractPassiveSwitch">
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractSwitch"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CheckValve">
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractPassiveSwitch">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="flowCoefficient" type="esdl:Table"/>
        </xsd:sequence>
        <xsd:attribute ecore:unsettable="false" name="innerDiameter" type="ecore:EDouble"/>
        <xsd:attribute ecore:unsettable="false" name="reopenDeltaP" type="ecore:EDouble"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AirVessel">
    <xsd:complexContent>
      <xsd:extension base="esdl:Transport"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Notes">
    <xsd:annotation>
      <xsd:documentation>Collection of notes that can be added to the map, like postits (with comments in HTML)</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="note" type="esdl:Note"/>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Unique identifier for the Notes collection</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="Note">
    <xsd:annotation>
      <xsd:documentation>An individual note that can have a location on the map, to document certain decisions</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="mapLocation" type="esdl:Point">
        <xsd:annotation>
          <xsd:documentation>Location on the map of the note</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Unique identifier for the note</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="title" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Title for this note</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="author" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Author of the note</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="text" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Text of the note</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="date" type="ecore:EDate">
      <xsd:annotation>
        <xsd:documentation>Date the note was added</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="Fuel">
    <xsd:annotation>
      <xsd:documentation>a Fuel like wood, oil, gas, and so on.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Matter">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="energyContentUnit" type="esdl:AbstractQuantityAndUnit"/>
          <xsd:element ecore:resolveProxies="true" minOccurs="0" name="emissionUnit" type="esdl:AbstractQuantityAndUnit"/>
        </xsd:sequence>
        <xsd:attribute ecore:unsettable="false" name="energyContent" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The energycontent of the fuel. The unit must be defined by the energyContentUnit attribute.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="emission" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The amount of emission (CO2, NOx) produced when a fuel is burned. The unit must be defined by the emissionUnit attribute.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Material">
    <xsd:annotation>
      <xsd:documentation>a Material like copper, aluminum, wood, stone, concrete, water, styrofoam, plaster</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Matter">
        <xsd:attribute ecore:unsettable="false" name="thermalConductivity" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Thermal conductivity of the material in W/mK (Watt per meter Kelvin)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="electricalConductivity" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Electrical conductivity in S/m (Siemens per meter)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="youngsModulus" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The Young's modulus is a mechanical property that measures the stiffness of a solid material (in Pascal or Newton/m2)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="specificHeatCapacity" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The specific heat capacity of the material in J/(K kg) (Joule per Kelvin kilogram)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Matters">
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="dataSource" type="esdl:AbstractDataSource"/>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="matter" type="esdl:Matter"/>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString"/>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractMatter">
    <xsd:annotation>
      <xsd:documentation>Abstract class for describing Matters, can be instantiated as a subclass of Matter or as a MatterReference.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Unique identifier for this object</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="name" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Name of the Matter</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="MatterReference">
    <xsd:annotation>
      <xsd:documentation>can be used to refer to a Matter from the collection of Matters (part of EnergySystemInformation)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractMatter">
        <xsd:attribute ecore:reference="esdl:Matter" name="reference" type="xsd:anyURI" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="CompoundTypeEnum">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="MIXED"/>
      <xsd:enumeration value="LAYERED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="EnvironmentalProfiles">
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="outsideTemparatureProfile" type="esdl:GenericProfile">
        <xsd:annotation>
          <xsd:documentation>Outside temperature profile</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="solarIrradianceProfile" type="esdl:GenericProfile">
        <xsd:annotation>
          <xsd:documentation>Solar irradiance profile</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="windSpeedProfile" type="esdl:GenericProfile">
        <xsd:annotation>
          <xsd:documentation>Wind speed profile</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="windDirectionProfile" type="esdl:GenericProfile">
        <xsd:annotation>
          <xsd:documentation>Wind direction profile</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="soilTemperatureProfile" type="esdl:GenericProfile">
        <xsd:annotation>
          <xsd:documentation>Soil temperature profile</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" minOccurs="0" name="relativeHumidityProfile" type="esdl:GenericProfile">
        <xsd:annotation>
          <xsd:documentation>Relative humidity profile</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="id" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Unique identifier for the EnvironmentalProfiles collection</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractBehaviour">
    <xsd:annotation>
      <xsd:documentation>Abstract class for specification of the (dynamic) behaviour of an asset</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="id" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>Unique identifier for this behaviour specification</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="name" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>name for this behaviour specification</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="GenericTransferFunction">
    <xsd:annotation>
      <xsd:documentation>Generic transfer function with numerator and denominator</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractTransferFunction">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="numerator" type="ecore:EDouble">
            <xsd:annotation>
              <xsd:documentation>Polynomial constants of the numerator in a Laplace representation of a transfer function: H = y(s) / u(s) = (a0 + a1 * s + a2 * s^2 + ... + an * s^n) / (b0 + b1 * s + b2 * s^2 + ... + bn * s^n)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="denominator" type="ecore:EDouble">
            <xsd:annotation>
              <xsd:documentation>Polynomial constants of the denominator in a Laplace representation of a transfer function: H = y(s) / u(s) = (a0 + a1 * s + a2 * s^2 + ... + an * s^n) / (b0 + b1 * s + b2 * s^2 + ... + bn * s^n)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="InputOutputQuantityRelation">
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractBehaviour"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DelayTransferFunction">
    <xsd:annotation>
      <xsd:documentation>Delay transfer function with a time constant</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractTransferFunction">
        <xsd:attribute default="0.0" ecore:unsettable="false" name="timeConstant" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>Time constant of a delay transfer function: H = y(s) / u(s) = (1 / s) * e ^(-timeConstant * s)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="AbstractTransferFunction">
    <xsd:annotation>
      <xsd:documentation>Abstract class for a TransferFunction for the specification of the behaviour of an asset</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractBehaviour">
        <xsd:attribute ecore:unsettable="false" name="type" type="esdl:TransferFunctionTypeEnum">
          <xsd:annotation>
            <xsd:documentation>Type of transfer function</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CombinedTransferFunction">
    <xsd:annotation>
      <xsd:documentation>Combination of multiple transfer functions by addition of multiplication of individual components</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:AbstractTransferFunction">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="2" name="component" type="esdl:AbstractTransferFunction"/>
        </xsd:sequence>
        <xsd:attribute ecore:unsettable="false" name="combinationFunction" type="esdl:CombinationFunctionEnum">
          <xsd:annotation>
            <xsd:documentation>Specifies the combination function to apply to the individual components of a combined transfer function</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="CombinationFunctionEnum">
    <xsd:annotation>
      <xsd:documentation>Specificaton of the combination function</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MULTIPLICATION"/>
      <xsd:enumeration value="ADDITION"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TransferFunctionTypeEnum">
    <xsd:annotation>
      <xsd:documentation>Specification of the transfer function type</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="POWER_SETPOINT_RESPONSE"/>
      <xsd:enumeration value="TEMPERATURE_SETPOINT_RESPONSE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="ElectricityProducer">
    <xsd:annotation>
      <xsd:documentation>Describes a (generic) electricity producing asset</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Producer">
        <xsd:attribute ecore:unsettable="false" name="minPower" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>the minimum power (in Watt) the producer can deliver once it's turned on</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="HeatProducer">
    <xsd:annotation>
      <xsd:documentation>Describes a (generic) heat producing asset</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Producer">
        <xsd:attribute ecore:unsettable="false" name="minTemperature" nl.tno.esdl.attribute.unit:unit="°C" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The minimum temperature of the heat that can be generated (in degrees Celcius)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute ecore:unsettable="false" name="maxTemperature" nl.tno.esdl.attribute.unit:unit="°C" type="ecore:EDouble">
          <xsd:annotation>
            <xsd:documentation>The maximum temperature of the heat that can be generated (in degrees Celcius)</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GasProducer">
    <xsd:annotation>
      <xsd:documentation>Describes a (generic) gas producing asset</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="esdl:Producer"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="MeasureTypeEnum">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNDEFINED"/>
      <xsd:enumeration value="ADD_GEOMETRY"/>
      <xsd:enumeration value="MODEL_RESTRICTION"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>
