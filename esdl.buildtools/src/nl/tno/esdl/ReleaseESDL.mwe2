/**
 * 
 * MWE2 Worfklow module to deploy an ESDL release
 * 
 * MWE2 documentation at: https://www.eclipse.org/Xtext/documentation/306_mwe2.html
 * 
 * It does: 
 *  Tag a release with the git tag (<tt>git describe --tags</tt>)
 *  Generate model, editor and edit code 
 *  Export image
 * 
 * 
 * 
 */

module nl.tno.esdl.ReleaseESDL

import org.eclipse.emf.ecore.resource.impl.*
import org.eclipse.xtext.ecore.*
import org.eclipse.emf.mwe.utils.*
import org.eclipse.emf.mwe2.ecore.*
import java.nio.file.*



 

//var rootPath = "c:/data/git/esdlspec-development/"
var rootPath = "../"
    
Workflow {
	
	// init EcoreSupport -> so it can access Eclipse resources in this workspace
    bean = org.eclipse.xtext.ecore.EcoreSupport {}
    bean = ResourceSetImpl : resourceSet {}
    bean = StandaloneSetup { 
    	resourceSet = resourceSet
    	platformUri = "${rootPath}"
    	scanClassPath = true
    }
    // tag the release with git tag
    // commit in local repo
    
    
    // tag the esdl file with the current git tag
    component = nl.tno.esdl.TagRelease {
    	modelFileName = "/esdl/model/esdl.ecore"
    	esdlParentPomFileName = "/esdl.parent/pom.xml"
    	rootPath = "${rootPath}"
    }
    
    
    // generate the code files
    component = nl.tno.esdl.EcoreGenerator {
		genModel = "platform:/resource/esdl/model/esdl.genmodel"
		srcPath = "platform:/resource/esdl/src-gen"
		generateEdit = true
		generateEditor = true
	}


	// generate ESDL.png from AirD file
	// does not work outside eclipse.. 	
//	component = nl.tno.esdl.EcoreImageGenerator {
//		airdFile = "platform:/resource/esdl/model/esdl.aird"
//		//airdFile = "c:/data/git/esdlspec-development/esdl/model/esdl.aird"
//		imageFileName = "c:/data/git/esdlspec-development/esdl/model/esdl2.png"
//		resourceSet = resourceSet
//	}

	// generate documentation
//	component = nl.tno.esdl.ESDLDocumentationGenerator {
//		rootPath = "${rootPath}"
//		ecoreDocgenYamlFile = "/esdl/ecore-docgen.yml"
//	}

	// 
	
	
}
