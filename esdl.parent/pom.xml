<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>nl.tno.esdl</groupId>
	<artifactId>esdl.parent</artifactId>
	<version>2.21.4</version>
	<name>Parent project for ESDL</name>
	<description>This is the parent project that describes the global properties of a Tycho-based build of ESDL. Use 'mvn clean install' to build ESDL in this folder</description>
	<packaging>pom</packaging>

	<properties>
		<!-- Use esdl.version to set the qualifier version for the released ESDL-plugins 
			e.g. v1905 -->
		<!-- This should be the same as the GIT tag of this release -->
		<esdl.version>v2104-1-g976dc1a</esdl.version>
		<tycho.version>1.7.0</tycho.version>
		<xtext.version>2.24.0</xtext.version>
		<emf.version>2.24.0</emf.version>
		<emfecore.version>2.18.0</emfecore.version>
		<emfcommon.version>2.21.0</emfcommon.version>
		<emfxmi.version>2.16.0</emfxmi.version>
		<mwe2.version>2.12.0</mwe2.version> <!--  2.11.0 has an old dependency issue -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<profiles>
		<profile>
			<id>default</id>
			<!-- build only esdl, not the other projects -->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<modules>
				<module>../esdl.buildtools</module> <!-- build tools project needs to be build first -->
				<module>../esdl</module>
				<module>../esdl.edit</module>
				<module>../esdl.editor</module>
			</modules>
		</profile>
		<profile>
			<id>designer</id>
			<modules>
				<module>../esdl.buildtools</module> <!-- build tools project needs to be build first -->
				<module>../esdl</module>
				<module>../esdl.edit</module>
				<module>../esdl.editor</module>
				<module>../../esdl-designer</module> <!-- next three are in their own repositories -->
				<module>../../esdl-designer-feature</module>
				<module>../../esdl-update-site</module>
			</modules>
		</profile>
	</profiles>



	<repositories>
		<repository>
			<id>eclipse-2019-03</id>
			<url>http://download.eclipse.org/releases/2019-03</url>
			<layout>p2</layout>
		</repository>
<!-- Does not work yet -->
<!-- 		<repository>
			<id>eclipse-2020-12</id>
			<url>http://download.eclipse.org/releases/2020-12</url>
			<layout>p2</layout>
		</repository>
 -->	
 	</repositories>



	<build>
		<plugins>
			<plugin>
				<!-- enable tycho build extension -->
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tycho.version}</version>
				<extensions>true</extensions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<version>${tycho.version}</version>
				<configuration>
					<environments>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>macosx</os>
							<ws>cocoa</ws>
							<arch>x86_64</arch>
						</environment>
					</environments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>4.0.3</version>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
						<!-- *NOTE*: The default phase of revision is initialize, but in case 
							you want to change it, you can do so by adding the phase here -->
						<phase>initialize</phase>
					</execution>
					<execution>
						<id>validate-the-git-infos</id>
						<goals>
							<goal>validateRevision</goal>
						</goals>
						<!-- *NOTE*: The default phase of validateRevision is verify, but in 
							case you want to change it, you can do so by adding the phase here -->
						<phase>package</phase>
					</execution>
				</executions>
				<configuration>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<skipPoms>false</skipPoms> <!-- only run on the parent project -->
					<verbose>false</verbose>
<!-- 					<runOnlyOnce>true</runOnlyOnce> -->
					<dotGitDirectory>${project.basedir}/../.git</dotGitDirectory>
					<gitDescribe>
						<dirty>-dev</dirty>
					</gitDescribe>
<!-- 					<injectAllReactorProjects>true</injectAllReactorProjects> -->
					<!-- <validationProperties> -->
					<!-- <validationProperty> -->
					<!-- <name>validating current commit has a tag</name> -->
					<!-- <value>${git.closest.tag.commit.count}</value> -->
					<!-- <shouldMatchTo>0</shouldMatchTo> -->
					<!-- </validationProperty> -->
					<!-- </validationProperties> -->
					<!-- <replacementProperties> -->
					<!-- <replacementProperty> -->
					<!-- <property>esdl.version</property> -->
					<!-- <token>^.*$</token> -->
					<!-- <value>${git.closest.tag.name}</value> -->
					<!-- <regex>false</regex> -->
					<!-- </replacementProperty> -->
					<!-- </replacementProperties> -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-packaging-plugin</artifactId>
				<version>${tycho.version}</version>
				<!-- <dependencies> -->
				<!-- <dependency> -->
				<!-- <groupId>org.eclipse.tycho.extras</groupId> -->
				<!-- <artifactId>tycho-buildtimestamp-jgit</artifactId> -->
				<!-- <version>${tycho-extras.version}</version> -->
				<!-- </dependency> -->
				<!-- </dependencies> -->
				<configuration>
					<!-- <strictBinIncludes>false</strictBinIncludes> -->
					<!-- <format>'rev${rev}-'yyyyMMdd-HHmm</format> -->
					<!-- <format>'v'yyMM</format> -->
					<!-- <format>${git.closest.tag.name}</format> -->
					<!-- <forceContextQualifier>${git.closest.tag.name}</forceContextQualifier> -->
					<forceContextQualifier>${esdl.version}</forceContextQualifier>
				</configuration>
			</plugin>
			<plugin>
		        <groupId>org.eclipse.tycho</groupId>
		        <artifactId>tycho-versions-plugin</artifactId>
		        <version>${tycho.version}</version>				
	      	</plugin>
		</plugins>
	</build>
</project>
